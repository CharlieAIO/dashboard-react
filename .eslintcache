[{"E:\\dashboard-react\\src\\index.js":"1","E:\\dashboard-react\\src\\reportWebVitals.js":"2","E:\\dashboard-react\\src\\App.js":"3","E:\\dashboard-react\\src\\components\\users\\users.js":"4","E:\\dashboard-react\\src\\components\\home\\home.js":"5","E:\\dashboard-react\\src\\components\\adminNav.js":"6","E:\\dashboard-react\\src\\components\\adminSearch.js":"7","E:\\dashboard-react\\src\\components\\home\\planModal.js":"8","E:\\dashboard-react\\src\\components\\home\\restockModal.js":"9","E:\\dashboard-react\\src\\components\\licenses\\licenses.js":"10","E:\\dashboard-react\\src\\components\\licenses\\licenseModal.js":"11","E:\\dashboard-react\\src\\components\\licenses\\table.js":"12","E:\\dashboard-react\\src\\components\\users\\table.js":"13","E:\\dashboard-react\\src\\components\\settings\\settings.js":"14","E:\\dashboard-react\\src\\components\\home\\planTable.js":"15","E:\\dashboard-react\\src\\components\\home\\restockTable.js":"16","E:\\dashboard-react\\src\\components\\siteHomePage\\home.js":"17","E:\\dashboard-react\\src\\components\\userDashboard\\dashboard.js":"18","E:\\dashboard-react\\src\\components\\bindPage\\bindPage.js":"19","E:\\dashboard-react\\src\\components\\userNav.js":"20"},{"size":265,"mtime":1611228962182,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1611220658625,"results":"23","hashOfConfig":"22"},{"size":1362,"mtime":1612113748932,"results":"24","hashOfConfig":"22"},{"size":4506,"mtime":1612137887206,"results":"25","hashOfConfig":"22"},{"size":7731,"mtime":1612139050943,"results":"26","hashOfConfig":"22"},{"size":13057,"mtime":1612138571995,"results":"27","hashOfConfig":"22"},{"size":6163,"mtime":1611964426451,"results":"28","hashOfConfig":"22"},{"size":23454,"mtime":1612140113251,"results":"29","hashOfConfig":"22"},{"size":9207,"mtime":1611939625724,"results":"30","hashOfConfig":"22"},{"size":5755,"mtime":1612137876176,"results":"31","hashOfConfig":"22"},{"size":8983,"mtime":1611939670360,"results":"32","hashOfConfig":"22"},{"size":6219,"mtime":1611936210399,"results":"33","hashOfConfig":"22"},{"size":4602,"mtime":1611936246378,"results":"34","hashOfConfig":"22"},{"size":11442,"mtime":1612137747466,"results":"35","hashOfConfig":"22"},{"size":5828,"mtime":1612139009657,"results":"36","hashOfConfig":"22"},{"size":6637,"mtime":1611936896588,"results":"37","hashOfConfig":"22"},{"size":4248,"mtime":1611758938732,"results":"38","hashOfConfig":"22"},{"size":5216,"mtime":1612123220642,"results":"39","hashOfConfig":"22"},{"size":4885,"mtime":1612123235935,"results":"40","hashOfConfig":"22"},{"size":802,"mtime":1612115463583,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"bywc2m",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"44"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"44"},"E:\\dashboard-react\\src\\index.js",[],["95","96"],"E:\\dashboard-react\\src\\reportWebVitals.js",[],"E:\\dashboard-react\\src\\App.js",["97"],"import './static/styles/main.css';\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport React, { Component } from 'react';\n\nimport Home from './components/home/home'\nimport Licenses from './components/licenses/licenses'\nimport Users from './components/users/users'\nimport Settings from './components/settings/settings'\nimport SiteHome from './components/siteHomePage/home'\nimport Dashboard from './components/userDashboard/dashboard'\nimport Bind from './components/bindPage/bindPage'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"h-screen flex w-screen overflow-hidden bg-other-100 dark:bg-darkOther-100\">\n\n        <Router>\n\n            {/* <div className=\"container mx-auto\"> */}\n              <Switch>\n                {/* <Route exact path='/' component={SiteHome} /> */}\n                <Route exact path='/dashboard' component={Dashboard} />\n                <Route exact path='/bind' component={Bind} />\n\n                <Route exact path='/home' component={Home} />\n                <Route exact path='/licenses' component={Licenses}/>\n                <Route exact path='/users' component={Users}/>\n                <Route exact path='/settings' component={Settings}/>\n              </Switch>\n            {/* </div> */}\n          \n\n        </Router>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","E:\\dashboard-react\\src\\components\\users\\users.js",["98","99"],"import '../../static/styles/main.css'; \r\nimport React, { Component, useEffect } from 'react';\r\nimport UserTable from './table';\r\nimport AdminNavigation from '../adminNav';\r\nimport AdminSearchbar from '../adminSearch';\r\n\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\n\r\n\r\nclass Users extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {}\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        function filter() {\r\n            var input, filter, table, tr, td, i, txtValue;\r\n            input = document.getElementById(\"searchInput\");\r\n            filter = input.value.toUpperCase();\r\n            table = document.getElementById(\"table\");\r\n            tr = table.getElementsByTagName(\"tr\");\r\n            \r\n            // Loop through all table rows, and hide those who don't match the search query\r\n            for (i = 0; i < tr.length; i++) {\r\n                try{\r\n                    var td1 = tr[i].getElementsByTagName(\"td\")[2];\r\n\r\n                    txtValue = td1.textContent || td1.innerText;\r\n                    if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n                        tr[i].style.display = \"\";\r\n                    } else {\r\n                        tr[i].style.display = \"none\";\r\n                    }\r\n\r\n                }catch(e){\r\n                    console.log(e)\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <>\r\n                <AdminNavigation />\r\n                <div className=\"flex flex-col w-0 flex-1 overflow-hidden\">\r\n                <AdminSearchbar />\r\n                <main className=\"flex-1 relative overflow-y-auto focus:outline-none\" id=\"main\" tabIndex='0'>\r\n\r\n                    {/* style=\"min-height: 650px;max-height: 650px;\" */}\r\n                    <div className=\"bg-white overflow-hidden shadow rounded-lg divide-y mr-12 mt-5 dark:bg-darkOther-200\">\r\n\r\n                        <div className=\"px-4 py-5 sm:px-6\">\r\n\r\n                            <dl className=\"sm:grid sm:grid-cols-2\">\r\n\r\n                                <div className=\"flex flex-col p-2  bg-white mr-5 dark:bg-darkOther-200\">\r\n\r\n                                    <h1  className=\"dark:text-white\">Users</h1>\r\n\r\n                                    <div className=\"relative w-full text-gray-400 focus-within:text-gray-600\">\r\n\r\n                                        <div className=\"absolute inset-y-0 left-0 flex items-center pointer-events-none\">\r\n                                            <AiOutlineSearch className=\"h-5 w-5 text-gray-900 dark:text-other-100\"/>\r\n                                        </div>   \r\n                                                                               \r\n                                        <input id=\"searchInput\" onKeyUp={filter} autoComplete=\"off\" className=\"dark:text-white dark:bg-darkOther-200 bg-white block w-full h-full pl-8 pr-3 py-2 text-gray-900 placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-0 focus:border-transparent sm:text-sm\" placeholder=\"Search by Key\" type=\"search\" name=\"search\" />\r\n                                    \r\n                                    </div>\r\n        \r\n                                </div>\r\n\r\n\r\n                            </dl>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"px-4 py-5 sm:p-6\">\r\n    \r\n\r\n                            <div className=\"flex flex-col \">\r\n\r\n                                <div className=\"-my-2 overflow-y-auto sm:-mx-6 lg: mr-12 dark:bg-darkOther-200\" style={{'min-height': '400px', 'max-height': '800px'}}>\r\n                                    <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\" >\r\n                                        \r\n                                        <div className=\"shadow overflow-hidden border-gray-200\">\r\n\r\n                                            {/* Table */}\r\n                                            <UserTable />\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <footer>\r\n                        <p className=\"text-sm font-small text-gray-600\">Invincible Services | 2021 | Thank you for using our services</p>\r\n                    </footer>\r\n   \r\n                </main>\r\n                </div>\r\n            \r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Users","E:\\dashboard-react\\src\\components\\home\\home.js",["100","101"],"E:\\dashboard-react\\src\\components\\adminNav.js",["102","103","104","105","106","107"],"E:\\dashboard-react\\src\\components\\adminSearch.js",["108","109"],"import '../static/styles/main.css'; \r\nimport React, {useState, useEffect} from 'react';\r\n\r\n\r\nimport { AiOutlineSearch, AiOutlineMenu } from 'react-icons/ai';\r\nimport { IoNotificationsOutline } from 'react-icons/io5';\r\nimport {FaUserCircle} from 'react-icons/fa'\r\n\r\n\r\nconst AdminSearch = () =>  {\r\n\r\n    const [userImage, setUserImage] = useState(\"\")\r\n\r\n    async function fetchData(){\r\n        const res = await fetch('/discord/data');\r\n        res.json()\r\n        .then(res => {setUserImage(res.discordImage)})\r\n        .catch(err =>  { console.log(err) });\r\n        \r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        const abortController = new AbortController();\r\n        fetchData()\r\n\r\n        return () => {\r\n            abortController.abort();\r\n        };\r\n\r\n    }, [])\r\n\r\n    // render() {\r\n        return (\r\n\r\n            <div className=\"relative z-10 flex h-16 shadow-sm\">\r\n                        <button className=\"px-4 text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500 md:hidden\" onClick={() => {\r\n                                    document.querySelector('#mob-nav').classList.contains('hidden') ? document.querySelector('#mob-nav').classList.remove('hidden') : document.querySelector('#mob-nav').classList.add('hidden')\r\n                                    document.querySelector('#mob-screen').classList.contains('hidden') ? document.querySelector('#mob-screen').classList.remove('hidden') : document.querySelector('#mob-screen').classList.add('hidden')\r\n                            }}>\r\n                            <AiOutlineMenu className=\"h-6 w-6\"/>\r\n                        </button>\r\n                        \r\n                        <div className=\"flex-1 px-4 flex justify-between bg-other-100 dark:bg-darkOther-100 mr-2\">\r\n                            <div className=\"flex-1 flex\">\r\n                                <form className=\"w-full flex md:ml-0\" action=\"#\" method=\"GET\">\r\n                                    <label className=\"sr-only\">Search</label>\r\n                                    <div className=\"relative w-full text-gray-400 focus-within:text-gray-600\">\r\n                                    <div className=\"absolute inset-y-0 left-0 flex items-center pointer-events-none\">\r\n                                        <AiOutlineSearch className=\"h-5 w-5 text-gray-900 dark:text-other-100\"/>\r\n                                    </div>\r\n                                    <input id=\"search_field\" disabled=\"disabled\" autoComplete=\"off\" className=\"bg-other-100 dark:bg-darkOther-100 block w-full h-full pl-8 pr-3 py-2 border-transparent text-gray-900 placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-0 focus:border-transparent sm:text-sm\" placeholder=\"Search\" type=\"search\" name=\"search\" />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n            \r\n                            <div className=\"ml-4 flex items-center md:ml-6 \">\r\n                                <button className=\"p-1 rounded-full bg-darkOther-200 text-other-100 dark:bg-other-200 dark:text-other-100 focus:outline-none\" onClick={() => {\r\n                                    document.querySelector('#notif-dropdown').classList.contains('hidden') ? document.querySelector('#notif-dropdown').classList.remove('hidden') : document.querySelector('#notif-dropdown').classList.add('hidden')\r\n                                }}>\r\n                                    <span className=\"sr-only\">View notifications</span>\r\n                                    <IoNotificationsOutline className=\"h-7 w-7\" id='hide'/>\r\n                                </button>\r\n\r\n                                <div className=\"dark:bg-darkOther-200 hidden absolute right-0 mt-24 mr-24 w-48 rounded-md shadow-lg py-1 bg-white focus:outline-none\" role=\"menu\" id=\"notif-dropdown\" aria-orientation=\"vertical\">\r\n                                        <span className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-darkOther-300 dark:text-white\" role=\"menuitem\" id='hide'>No notifications</span>\r\n                                </div>\r\n                        \r\n                                <div className=\"ml-3 relative\">\r\n                                    <div>  \r\n                                        <button className=\"max-w-xs bg-white flex items-center text-sm rounded-full focus:outline-none\" id=\"profile-button-hide\" name=\"profile-dropdown\" aria-haspopup=\"true\"  onClick={() => {\r\n                                            document.querySelector('#profile-dropdown').classList.contains('hidden') ? document.querySelector('#profile-dropdown').classList.remove('hidden') : document.querySelector('#profile-dropdown').classList.add('hidden')\r\n                                        }}>\r\n                                            <span className=\"sr-only\">Open user menu</span>\r\n                                            {userImage == \"\" ? <FaUserCircle className=\"h-10 w-10 rounded-full bg-darkOther-200 text-other-100 dark:bg-other-200 dark:text-other-100 \" id=\"profile-button-hide\" name=\"profile-dropdown\" /> : <img className=\"h-8 w-8 rounded-full text-other-100 dark:text-darkOther-300\" src={userImage} id=\"profile-button-hide\" name=\"profile-dropdown\" />}\r\n                                        </button>\r\n                                    </div>\r\n            \r\n                                    <div className=\"dark:bg-darkOther-200 hidden origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white\" role=\"menu\" id=\"profile-dropdown\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu\">\r\n                                        <span href=\"#\" className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-darkOther-300 dark:text-white\" role=\"menuitem\" id='hide'>Sign out</span>\r\n                                    </div>\r\n                                </div>\r\n            \r\n                            </div>\r\n                        </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default AdminSearch;","E:\\dashboard-react\\src\\components\\home\\planModal.js",["110","111","112","113"],"E:\\dashboard-react\\src\\components\\home\\restockModal.js",[],"E:\\dashboard-react\\src\\components\\licenses\\licenses.js",["114","115"],"import '../../static/styles/main.css'; \r\nimport React, { Component, useEffect } from 'react';\r\nimport LicenseModal from './licenseModal';\r\nimport LicenseTable from './table';\r\nimport AdminNavigation from '../adminNav';\r\nimport AdminSearchbar from '../adminSearch';\r\n\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\nimport { FaPlus } from 'react-icons/fa';\r\n\r\nclass Licenses extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {}\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        function filter() {\r\n            var input, filter, table, tr, td, i, txtValue;\r\n            input = document.getElementById(\"searchInput\");\r\n            filter = input.value.toUpperCase();\r\n            table = document.getElementById(\"table\");\r\n            tr = table.getElementsByTagName(\"tr\");\r\n            \r\n            // Loop through all table rows, and hide those who don't match the search query\r\n            for (i = 0; i < tr.length; i++) {\r\n                try{\r\n                    var td1 = tr[i].getElementsByTagName(\"td\")[1];\r\n\r\n                    txtValue = td1.textContent || td1.innerText;\r\n                    if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n                        tr[i].style.display = \"\";\r\n                    } else {\r\n                        tr[i].style.display = \"none\";\r\n                    }\r\n\r\n                }catch(e){\r\n                    console.log(e)\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <>\r\n\r\n                <AdminNavigation />\r\n                <div className=\"flex flex-col w-0 flex-1 overflow-hidden\">\r\n                <AdminSearchbar />\r\n            \r\n                <main className=\"flex-1 relative overflow-y-auto focus:outline-none\" id=\"main\" tabIndex='0'>\r\n\r\n                    <div className=\"bg-white overflow-hidden shadow rounded-lg divide-y mr-12 mt-5 dark:bg-darkOther-200\">\r\n\r\n                        <div className=\"px-4 py-5 sm:px-6\">\r\n\r\n                            <dl className=\"sm:grid sm:grid-cols-2\">\r\n\r\n                                <div className=\"flex flex-col p-2  bg-white mr-5 dark:bg-darkOther-200\">\r\n\r\n                                    <h1 className=\"dark:text-white\">Licenses</h1>\r\n\r\n                                    <div className=\"relative w-full text-gray-400 focus-within:text-gray-600 dark:bg-darkOther-200\">\r\n\r\n                                        <div className=\"absolute inset-y-0 left-0 flex items-center pointer-events-none\">\r\n                                            <AiOutlineSearch className=\"h-5 w-5 text-gray-900 dark:text-other-100\"/>\r\n                                        </div>   \r\n                                                                               \r\n                                        <input id=\"searchInput\" onKeyUp={filter} autoComplete=\"off\" className=\"dark:text-white dark:bg-darkOther-200 bg-white block w-full h-full pl-8 pr-3 py-2 text-gray-900 placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-0 focus:border-transparent sm:text-sm\" placeholder=\"Search by DiscordName/DiscordID\" type=\"search\" name=\"search\" />\r\n                                    \r\n                                    </div>\r\n        \r\n                                </div>\r\n\r\n\r\n                                <div className=\"flex-col border-gray-200 p-2 mr-4 text-right\">\r\n\r\n                                    <button name=\"license-modal\" id=\"license-button-hide\" type=\"button\" className=\"inline-flex items-center px-3 py-2 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-white dark:text-white bg-other-100 dark:bg-other-200 text-other-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-other-200 dark:focus:ring-darkOther-200\" onClick={() => {\r\n                                                document.querySelector('#license-modal').classList.contains('hidden') ? document.querySelector('#license-modal').classList.remove('hidden') : document.querySelector('#license-modal').classList.add('hidden')\r\n                                            }}>\r\n                                        <FaPlus className=\"-ml-0.5 mr-2 h-4 w-4 dark:text-white text-other-500\"/>\r\n                                        New License\r\n                                    </button>\r\n\r\n                                </div>\r\n\r\n                            </dl>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"px-4 py-5 sm:p-6\">\r\n    \r\n                            {/* License Modal */}\r\n                            <LicenseModal />\r\n\r\n\r\n                            <div className=\"flex flex-col \">\r\n\r\n                                <div className=\"-my-2 overflow-y-auto sm:-mx-6 lg: mr-12 dark:bg-darkOther-200\" style={{'min-height': '400px', 'max-height': '800px'}}>\r\n                                    <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\" >\r\n                                        \r\n                                        <div className=\"shadow overflow-hidden\">\r\n\r\n                                            {/* Table */}\r\n                                            <LicenseTable />\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <footer>\r\n                        <p className=\"text-sm font-small text-gray-600\">Invincible Services | 2021 | Thank you for using our services</p>\r\n                    </footer>\r\n   \r\n                </main>\r\n\r\n                </div>\r\n            \r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Licenses","E:\\dashboard-react\\src\\components\\licenses\\licenseModal.js",[],"E:\\dashboard-react\\src\\components\\licenses\\table.js",["116","117","118","119","120","121","122"],"import '../../static/styles/main.css'; \r\nimport React, { useEffect, useState } from 'react';\r\nimport { BsThreeDots } from 'react-icons/bs';\r\n\r\n\r\n\r\nconst LicenseTable = () => {\r\n\r\n    const [users, setUsers] = useState([])\r\n\r\n    async function fetchUsers(){\r\n        const res = await fetch('/users');\r\n        res.json()\r\n        .then(res => {setUsers(res)})\r\n        .catch(err =>  {});\r\n        \r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        var abortController = new AbortController();\r\n        fetchUsers()\r\n\r\n\r\n        setInterval(() => {\r\n            abortController = new AbortController();\r\n            fetchUsers()\r\n\r\n        }, 5000);\r\n\r\n\r\n        return () => {\r\n            abortController.abort();\r\n        };\r\n\r\n    }, [])\r\n\r\n\r\n    const renderTableRows = () => {\r\n        return users.map(user => {\r\n            var date = new Date(user.dateCreated * 1000)\r\n            return (\r\n    \r\n                <tr key={user.uuid}>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap dark:bg-darkOther-200\">\r\n                        {/* <div className=\"flex items-center\"> */}\r\n\r\n                            {/* <div className=\"ml-2\"> */}\r\n\r\n                                {/* style=\"font-family: 'Ubuntu Mono', monospace;\" */}\r\n                                <div className=\"text-sm text-gray-700 font-mono dark:text-gray-400\" id=\"key\">\r\n                                    {user.key}\r\n                                </div>\r\n\r\n                            {/* </div> */}\r\n\r\n                        {/* </div> */}\r\n                    </td>\r\n\r\n                    <td className=\"px-6 py-4 whitespace-nowrap dark:bg-darkOther-200\">\r\n                        <div className=\"text-sm text-gray-900 dark:text-gray-500\" id=\"discordName\">{user.discordName == \"empty\" ? \"Unbound\" : user.discordName}</div>\r\n                        <div className=\"text-sm text-gray-500 dark:text-gray-300\" id=\"discordId\">{user.discordId == 123456789 ? \"Unbound\" : user.discordId}</div>\r\n                    </td>\r\n\r\n                    <td className=\"px-6 py-4 whitespace-nowrap dark:bg-darkOther-200\">\r\n                        <div className=\"text-sm text-gray-900\" id=\"keyType\">{user.keyType}</div>\r\n                        <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\r\n                            Active\r\n                        </span>\r\n                    </td>\r\n\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:bg-darkOther-200\">\r\n                        {\r\n                        `${date.getDate()} ${['January','February','March','April','May','June','July','August','September','October','November','December'][date.getMonth()]}, ${date.getFullYear()}`\r\n                        }\r\n                    </td>\r\n\r\n                    <td className=\"px-6 py-4 whitespace-nowrap dark:bg-darkOther-200\">\r\n                        \r\n                        <button className=\"ml-2 text-gray-600 hover:text-gray-900\" id={`${user.uuid}-dropdown-button-hide`} onClick={() => {\r\n                            document.querySelector(`#dropdown-${user.uuid}`).classList.contains('hidden') ? document.querySelector(`#dropdown-${user.uuid}`).classList.remove('hidden') : document.querySelector(`#dropdown-${user.uuid}`).classList.add('hidden')\r\n                        }}> <BsThreeDots className=\"h-4 w-4\" id={`${user.uuid}-icon-hide`} />\r\n                        </button>\r\n\r\n                        <div id={`dropdown-${user.uuid}`} className=\"dark:bg-darkOther-200 hidden mx-1 ml-24 mt-24 origin-top-right absolute top-2 w-48 mt-1 rounded-md shadow-lg z-2 bg-white ring-1 ring-black ring-opacity-5\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu\">\r\n\r\n                            <a href=\"#\" className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-white dark:hover:bg-darkOther-300\" role=\"menuitem\" id=\"hide\">Unbind from User</a>\r\n                            <a href=\"#\" className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-white dark:hover:bg-darkOther-300\" role=\"menuitem\" id=\"hide\">Revoke & Delete</a>\r\n                            <a href=\"#\" className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-white dark:hover:bg-darkOther-300\" role=\"menuitem\" id=\"hide\">Send receipt via email</a>\r\n                            <a href=\"#\" className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-white dark:hover:bg-darkOther-300\" role=\"menuitem\" id=\"hide\">Extend license</a>\r\n                    \r\n                        </div>\r\n\r\n                    </td>\r\n\r\n                </tr>\r\n            )\r\n            \r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n            <table className=\"w-full overflow-y-auto\" id=\"table\" id='table'>\r\n\r\n                <thead className=\"bg-gray-200 dark:bg-darkOther-100\">\r\n\r\n                    <tr>\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Key\r\n                        </th>\r\n\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        User\r\n                        </th>\r\n\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Plan\r\n                        </th>\r\n\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Created\r\n                        </th>\r\n\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Options\r\n                        </th>\r\n                    </tr>\r\n\r\n                </thead>\r\n                \r\n                <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700 min-h-full\">\r\n                    {renderTableRows()}\r\n                </tbody>\r\n                \r\n            </table>\r\n\r\n    )\r\n\r\n\r\n\r\n}\r\nexport default LicenseTable","E:\\dashboard-react\\src\\components\\users\\table.js",["123","124","125","126","127"],"import '../../static/styles/main.css'; \r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport {FaUserCircle} from 'react-icons/fa'\r\n\r\nconst LicenseTable = () => {\r\n    const [users, setUsers] = useState([])\r\n    \r\n\r\n    async function fetchUsers(){\r\n        const res = await fetch('/users');\r\n        res.json()\r\n        .then(res => {setUsers(res)})\r\n        .catch(err =>  {});\r\n        \r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        var abortController = new AbortController();\r\n        fetchUsers()\r\n\r\n\r\n        setInterval(() => {\r\n            abortController = new AbortController();\r\n            fetchUsers()\r\n\r\n        }, 5000);\r\n\r\n\r\n        return () => {\r\n            abortController.abort();\r\n        };\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    const renderTableRows = () => {\r\n        return users.map(user => {\r\n            return (\r\n                <tr key={user.id}>\r\n                    <td className=\"px-6 py-4 whitespace-nowra dark:bg-darkOther-200\">\r\n                        <div className=\"flex items-center\">\r\n                            <div className=\"flex-shrink-0 h-10 w-10\">\r\n                            {user.discordImage == \"\" ? <FaUserCircle className=\"h-10 w-10 rounded-full bg-other-200 text-other-100\" /> : <img className=\"h-10 w-10 rounded-full\" src={user.discordImage} alt=\"\" />}\r\n                            \r\n                            </div>\r\n\r\n                            <div className=\"ml-4\">\r\n                                <div className=\"text-sm font-medium text-gray-900 dark:text-gray-400\">\r\n                                {user.discordName == \"empty\" ? \"Unbound\" : user.discordName}\r\n                                </div>\r\n\r\n                                <div className=\"text-sm text-gray-500 dark:text-gray-300\">\r\n                                {user.discordId == 123456789 ? \"Unbound\" : user.discordId}\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n\r\n                    </td>\r\n\r\n                    <td className=\"px-6 py-4 whitespace-nowrap dark:bg-darkOther-200\">\r\n                        <div className=\"text-sm text-gray-900 dark:text-gray-400\">{user.email}</div>\r\n                    </td>\r\n\r\n                    <td className=\"px-6 py-4 whitespace-nowrap dark:bg-darkOther-200\">\r\n                        <div className=\"text-sm text-gray-700 font-mono dark:text-gray-400\">{user.key}</div>\r\n                        <div className=\"text-sm text-gray-500 dark:text-gray-300\">{user.keyType}</div>\r\n                    </td>\r\n             \r\n\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:bg-darkOther-200 dark:text-gray-400\">\r\n                    {user.dateJoined == 0 ? \"Not joined\" : new Date(user.dateJoined * 1000).constructor()}\r\n                    </td>\r\n\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium dark:bg-darkOther-200\">\r\n                        <span className=\"text-other-200 hover:text-indigo-900\"></span>\r\n                    </td>\r\n\r\n                </tr>\r\n            )\r\n            \r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n            <table className=\"w-full overflow-y-auto\" id=\"table\" id='table'>\r\n\r\n                <thead className=\"bg-gray-200 dark:bg-darkOther-100\">\r\n\r\n                    <tr>\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            User\r\n                        </th>\r\n    \r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Email\r\n                        </th>\r\n    \r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Key\r\n                        </th>\r\n    \r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Joined\r\n                        </th>\r\n    \r\n                        <th scope=\"col\" className=\"relative px-6 py-3\">\r\n                        </th>\r\n\r\n                    </tr>\r\n\r\n                </thead>\r\n                \r\n                <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700 min-h-full\">\r\n                    {renderTableRows()}\r\n                </tbody>\r\n                \r\n            </table>\r\n\r\n    )\r\n\r\n\r\n}\r\nexport default LicenseTable","E:\\dashboard-react\\src\\components\\settings\\settings.js",["128"],"import '../../static/styles/main.css'; \r\nimport React, { Component, useEffect } from 'react';\r\nimport AdminNavigation from '../adminNav';\r\nimport AdminSearchbar from '../adminSearch';\r\n\r\nimport { FaStripe } from 'react-icons/fa'\r\n\r\nclass Settings extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {}\r\n\r\n    }\r\n\r\n    openIntergrate = () => {\r\n        window.open('https://connect.stripe.com/oauth/authorize?response_type=code&client_id=ca_IoulDfRGftLWpHLLkw7NJwDFfs9LqhgT&scope=read_write&redirect_uri=http://127.0.0.1:4000/stripe/oauth/uri', '_blank').focus()\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <AdminNavigation />\r\n                <div className=\"flex flex-col w-0 flex-1 overflow-hidden\">\r\n                <AdminSearchbar />\r\n                <main className=\"space-y-6 sm:px-6 overflow-y-auto mb-12\">\r\n                    <section aria-labelledby=\"section1\">\r\n\r\n                        <div className=\"shadow sm:rounded-md sm:overflow-hidden mt-8 shadow-lg w-3/4\">\r\n                            <div className=\"bg-white py-4 px-4 sm:p-6 dark:bg-darkOther-200\">\r\n                                <div>\r\n                                    <h1 className=\"text-lg font-medium text-other-300 dark:text-white\">General Settings</h1>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"shadow sm:rounded-md sm:overflow-hidden mt-3 w-3/4\">\r\n                            <div className=\"bg-white py-4 px-4 sm:p-6 dark:bg-darkOther-200\">\r\n                                    <div>\r\n                                        <label for=\"accountName\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-400\">Account Name</label>\r\n                                        <div className=\"mt-1\">\r\n                                            <input type=\"text\" name=\"accountName\" id=\"accountName\" autoComplete=\"off\" className=\"dark:text-other-100 dark:bg-darkOther-100 shadow-sm focus:ring-other-200 focus:border-other-200 block w-1/2 text-md border-gray-300 rounded-md py-2 dark:focus:ring-darkOther-200 dark:focus:border-darkOther-200\" placeholder=\"Cook Group\" aria-describedby=\"email-description\" />\r\n                                        </div>\r\n\r\n                                        <p className=\"mt-2 text-sm text-gray-500\" id=\"accountName-description\">This account name will be displayed on the Dashboard & in email receipts</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"text-right\">\r\n                                        <button className=\"text-other-200 text-sm font-medium bg-gray-200 rounded-lg py-2 px-8 text-right dark:bg-darkOther-100 dark:text-other-100\">Save</button>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"shadow sm:rounded-md sm:overflow-hidden mt-3 w-3/4\">\r\n                            <div className=\"bg-white py-4 px-4 sm:p-6 dark:bg-darkOther-200\">\r\n                                <div>\r\n                                    <label for=\"domain\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-400\">Dashboard Domain</label>\r\n                                    <div className=\"mt-1\">\r\n                                    <input type=\"text\" name=\"domain\" id=\"domain\" className=\"dark:text-other-100 dark:bg-darkOther-100 shadow-sm focus:ring-other-200 focus:border-other-200 dark:focus:ring-darkOther-200 dark:focus:border-darkOther-200 block w-1/2 text-md border-gray-300 rounded-md py-2\" placeholder=\"www.cookgroup.com\" aria-describedby=\"domain-description\" />\r\n                                    </div>\r\n                                    <p className=\"mt-2 text-sm text-gray-500\" id=\"accountName-description\">Don't include the https://</p>\r\n                                </div>\r\n\r\n                                <div className=\"text-right\">\r\n                                    <button className=\"text-other-200 text-sm font-medium bg-gray-200 rounded-lg py-2 px-8 text-right dark:bg-darkOther-100 dark:text-other-100\">Save</button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"shadow sm:rounded-md sm:overflow-hidden mt-3 w-3/4\">\r\n                            <div className=\"bg-white py-4 px-4 sm:p-6 dark:bg-darkOther-200\">\r\n                                <div>\r\n                                    <label for=\"supportEmail\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-400\">Support email</label>\r\n                                    <div className=\"mt-1\">\r\n                                        <input type=\"text\" name=\"supportEmail\" id=\"supportEmail\" className=\"dark:text-other-100 dark:bg-darkOther-100 shadow-sm focus:ring-other-200 focus:border-other-200 dark:focus:ring-darkOther-200 dark:focus:border-darkOther-200 block w-1/2 text-md border-gray-300 rounded-md py-2\" placeholder=\"help@cookgroup.com\" aria-describedby=\"supportEmail-description\" />\r\n                                    </div>\r\n                                    <p className=\"mt-2 text-sm text-gray-500\" id=\"supportEmail-description\">This will be displayed to all your users if they require assistance</p>\r\n                                </div>\r\n\r\n                                <div className=\"text-right\">\r\n                                    <button className=\"text-other-200 text-sm font-medium bg-gray-200 rounded-lg py-2 px-8 text-right dark:bg-darkOther-100 dark:text-other-100\">Save</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </section>\r\n\r\n                    <section aria-labelledby=\"section2\">\r\n                        <div className=\"shadow sm:rounded-md sm:overflow-hidden mt-8 shadow-lg w-3/4\">\r\n                            <div className=\"bg-white py-4 px-4 sm:p-6 dark:bg-darkOther-200\">\r\n                                <div>\r\n                                    <h1 className=\"text-lg font-medium text-other-300 dark:text-white\">Branding Settings</h1>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"shadow sm:rounded-md sm:overflow-hidden mt-3 w-3/4\">\r\n                            <div className=\"bg-white py-4 px-4 sm:p-6 dark:bg-darkOther-200\">\r\n                                <div>\r\n                                    <label for=\"logo\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-400\">Logo</label>\r\n                                    <div className=\"mt-1\">\r\n                                    <input type=\"text\" name=\"logo\" id=\"logo\" className=\"dark:text-other-100 dark:bg-darkOther-100 shadow-sm focus:ring-other-200 focus:border-other-200 dark:focus:ring-darkOther-200 dark:focus:border-darkOther-200 block w-1/2 text-md border-gray-300 rounded-md py-2\" placeholder=\"help@cookgroup.com\" aria-describedby=\"logo-description\" />\r\n                                    </div>\r\n                                    <p className=\"mt-2 text-sm text-gray-500\" id=\"logo-description\">Enter an image URL here</p>\r\n                                </div>\r\n                                <div className=\"text-right\">\r\n                                    <button className=\"text-other-200 text-sm font-medium bg-gray-200 rounded-lg py-2 px-8 text-right dark:bg-darkOther-100 dark:text-other-100\">Save</button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n\r\n\r\n                    <section aria-labelledby=\"section3\">\r\n                        <div className=\"shadow sm:rounded-md sm:overflow-hidden mt-8 shadow-lg w-3/4\">\r\n                            <div className=\"bg-white py-4 px-4 sm:p-6 dark:bg-darkOther-200\">\r\n                                <div>\r\n                                    <h1 className=\"text-lg font-medium text-other-300  dark:text-white\">Stripe Settings</h1>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"shadow sm:rounded-md sm:overflow-hidden mt-3 w-3/4\">\r\n                            <div className=\"bg-white py-4 px-4 sm:p-6 dark:bg-darkOther-200\">\r\n                                <div>\r\n                                    <label for=\"failePayments\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-400\">Setup Stripe Intergation</label>\r\n                                    <div className=\"mt-1\">\r\n                                        <button onClick={this.openIntergrate}  className=\"bg-other-200 dark:bg-darkOther-100 rounded-sm w-24 h-10 text-white text-md font-medium px-6 hover:bg-other-300\">\r\n                                            <FaStripe className=\"h-10 w-12\"/>\r\n                                        </button>\r\n                                    </div>\r\n                                    <p className=\"mt-2 text-sm text-gray-500\" id=\"failePayments-description\">Link you stripe account...</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"shadow sm:rounded-md sm:overflow-hidden mt-3 w-3/4 mb-12\">\r\n                            <div className=\"bg-white py-4 px-4 sm:p-6 dark:bg-darkOther-200\">\r\n                                <div>\r\n                                    <label for=\"failePayments\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-400\">Manage Failed Payments</label>\r\n                                    <div className=\"mt-1\">\r\n                                        <select id=\"failePayments\" name=\"failePayments\" className=\"py-5 text-gray-800 font-medium focus:ring-other-200 focus:border-other-200 dark:focus:ring-darkOther-200 dark:focus:border-darkOther-200 dark:text-white relative block w-1/2 rounded-none rounded-t-md bg-transparent focus:z-10 sm:text-sm border-gray-300\">\r\n                                            <option value=\"1\" className=\"font-medium dark:text-white dark:bg-darkOther-200\">Delete key & Kick user</option>\r\n                                            <option value=\"2\" className=\"font-medium dark:text-white dark:bg-darkOther-200\">Remove roles & Allow user to renew</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <p className=\"mt-2 text-sm text-gray-500\" id=\"failePayments-description\">Select how you want to deal with failed payments from users</p>\r\n                                </div>\r\n                                <div className=\"text-right\">\r\n                                    <button className=\"text-other-200 text-sm font-medium bg-gray-200 rounded-lg py-2 px-8 text-right dark:bg-darkOther-100 dark:text-other-100\">Save</button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    \r\n                    </section>\r\n\r\n                </main>\r\n                </div>\r\n            \r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Settings","E:\\dashboard-react\\src\\components\\home\\planTable.js",["129"],"E:\\dashboard-react\\src\\components\\home\\restockTable.js",["130"],"import '../../static/styles/main.css'; \r\nimport React, { useState, useEffect } from 'react';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\n\r\n\r\n\r\nimport { AiOutlineDelete, AiOutlineCopy } from 'react-icons/ai';\r\nimport { BsThreeDots } from 'react-icons/bs';\r\n\r\n\r\n\r\nconst RestockTable = () => {\r\n    const [restocks, setRestocks] = useState([])\r\n\r\n    async function fetchRestocks(){\r\n        const res = await fetch('/restocks');\r\n        res.json()\r\n        .then(res => {setRestocks(res);})\r\n        .catch(err =>  {console.log(err)});\r\n        \r\n    }\r\n\r\n    useEffect(() =>{\r\n        var abortController = new AbortController();\r\n        fetchRestocks()\r\n        \r\n\r\n        setInterval(() => {\r\n            abortController = new AbortController();\r\n            fetchRestocks()\r\n        }, 5000);\r\n\r\n\r\n        return () => {\r\n            abortController.abort();\r\n        };\r\n\r\n    }, [])\r\n\r\n    const deleteRestock = async (id) => {\r\n        var response = await fetch('/restocks/delete/' + id, {\r\n            method:'get',\r\n            headers: {\r\n                authorization:1\r\n            }\r\n        })\r\n        if(response.ok) {\r\n            return\r\n        }else{\r\n            return\r\n        }\r\n    }\r\n\r\n\r\n    const renderTableRows = () => {\r\n        return restocks.map(restock => {\r\n            return (\r\n                <tr key={restock.id}>\r\n\r\n                    <td className=\"px-6 py-3 max-w-0 whitespace-nowrap text-sm font-medium text-gray-900 dark:bg-darkOther-200 dark:text-white\">\r\n                        <div className=\"flex items-center lg:pl-2\">\r\n                            {/* <div className=\"flex-shrink-0 w-2.5 h-2.5 rounded-full bg-pink-600\" aria-hidden=\"true\"></div> */}\r\n                                <a href=\"#\" className=\"truncate\">\r\n                                {restock.planId}\r\n                                </a>\r\n                        </div>\r\n                    </td>\r\n\r\n                    <td className=\"px-6 py-3 text-sm text-gray-800 font-medium dark:bg-darkOther-200 dark:text-white\">\r\n                        <div className=\"flex items-center space-x-2\">\r\n\r\n                        <span className=\"flex-shrink-0 text-xs leading-5 font-medium w-full\"><ProgressBar bgcolor='#3B82F6' completed={(100 * restock.stockRemaining) / restock.stock} /></span>\r\n                        </div>\r\n                    </td>\r\n\r\n                    <td className=\"pr-6 dark:bg-darkOther-200 dark:text-white\">\r\n                        <div className=\"relative flex justify-end items-center\">\r\n                            <button id=\"restock-options-button-hide\" name=\"restock-options-dropdown\" aria-haspopup=\"true\" type=\"button\" aria-expanded=\"true\" className=\"w-8 h-8 inline-flex items-center justify-center text-gray-800 rounded-full hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 dark:text-white\" onClick={() => {\r\n                                document.querySelector('#restock-options-dropdown-' + restock.id).classList.contains('hidden') ? document.querySelector('#restock-options-dropdown-' + restock.id).classList.remove('hidden') : document.querySelector('#restock-options-dropdown-'  + restock.id).classList.add('hidden')\r\n                            }}>\r\n                            <BsThreeDots className=\"h-4 w-4\" id='hide'/>\r\n                            </button>\r\n\r\n                            <div id={\"restock-options-dropdown-\" + restock.id} className=\"dark:bg-darkOther-200 hidden mx-3 mr-10 origin-top-right absolute right-7 top-0 w-48 mt-1 rounded-md shadow-lg z-10 bg-white ring-1 ring-black ring-opacity-5\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"project-options-menu-0\">\r\n                                <div className=\"py-1\" role=\"none\">\r\n                                    <CopyToClipboard href=\"#\" className=\"group flex w-full items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-darkOther-300 dark:text-white\" role=\"menuitem\" text={`${window.location.origin}/?password=${restock.password}`} onCopy={() =>\r\n                                    document.querySelector('#copy-hide-' + restock.id).classList.add('text-green-500')}>\r\n                                    <button className=\"w-full\" type='button' id={\"restock-options-dropdown-copy-\" + restock.id}>\r\n                                        <AiOutlineCopy className=\"mr-3 h-5 w-5 text-gray-400 group-hover:text-gray-500\" id={'copy-hide-'+ restock.id}/>\r\n                                        Copy Link\r\n                                    </button>\r\n                                    </CopyToClipboard>\r\n\r\n                                    <button type='button' className=\"group flex w-full items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-darkOther-300 dark:text-white\" role=\"menuitem\" onClick={() => deleteRestock(restock.id)} >\r\n                                        <AiOutlineDelete className=\"mr-3 h-5 w-5 text-gray-400 group-hover:text-gray-500\" onClick={() => deleteRestock(restock.id)}/>\r\n                                        Delete\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    \r\n                    </td>\r\n\r\n                </tr>\r\n            )\r\n            \r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n            <table className=\"bg-white w-full overflow-y-auto mt-2 rounded-md\" id='table'>\r\n\r\n                <thead className=\"bg-gray-200 rounded-md dark:bg-darkOther-100\">\r\n                    <tr className=\"border-gray-200\">\r\n\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        <span className=\"lg:pl-2\">Plan</span>\r\n                    </th>\r\n\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-widerr\">\r\n                        Stock\r\n                    </th>\r\n\r\n                    <th className=\"md:table-cell px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Options\r\n                    </th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                \r\n                <tbody className=\"bg-white divide-y divide-gray-200 dark:divide-gray-500 w-full\">\r\n                    {renderTableRows()}\r\n                </tbody>\r\n                \r\n            </table>\r\n\r\n    )\r\n\r\n\r\n}\r\nexport default RestockTable","E:\\dashboard-react\\src\\components\\siteHomePage\\home.js",["131","132","133","134"],"import '../../static/styles/main.css'; \r\nimport React, { Component, useEffect } from 'react';\r\n\r\n\r\nclass Settings extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {}\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n\r\n                <div className=\"w-full bg-gray-50\">\r\n                <div className=\"w-full bg-white shadow\">\r\n                    <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\r\n                    <div className=\"flex justify-between items-center py-6 md:justify-start md:space-x-10\">\r\n                        <div className=\"flex justify-start lg:w-0 lg:flex-1\">\r\n                        <a href=\"#\">\r\n                            <span className=\"sr-only\">Workflow</span>\r\n                            <img className=\"h-8 w-auto sm:h-10\" src=\"https://tailwindui.com/img/logos/workflow-mark-other-200.svg\" alt=\"\" />\r\n                        </a>\r\n                        </div>\r\n                        <div className=\"-mr-2 -my-2 md:hidden\">\r\n                        <button type=\"button\" className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\r\n                            <span className=\"sr-only\">Open menu</span>\r\n        \r\n                            <svg className=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\r\n                            </svg>\r\n                        </button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    </div>\r\n\r\n\r\n             \r\n                </div>\r\n\r\n                <main className=\"lg:relative\">\r\n                    <div className=\"mx-auto max-w-7xl w-full pt-16 pb-20 text-center lg:py-48 lg:text-left\">\r\n                    <div className=\"px-4 lg:w-1/2 sm:px-8 xl:pr-16\">\r\n                        <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl lg:text-5xl xl:text-6xl\">\r\n                        <span className=\"block xl:inline\">get your dashboard</span>\r\n                        <span className=\"block text-other-200 dark:text-darkOther-200 xl:inline\"> today</span>\r\n                        </h1>\r\n                        <p className=\"mt-3 max-w-md mx-auto text-lg text-gray-500 sm:text-xl md:mt-5 md:max-w-3xl\">\r\n                        explore our site and get started with our dashboards today.\r\n                        </p>\r\n                        <div className=\"mt-10 sm:flex sm:justify-center lg:justify-start\">\r\n                        <div className=\"rounded-md shadow\">\r\n                            <a href={'http://127.0.0.1:4000' + '/discord/oauth'} className=\"dark:bg-darkOther-200 dark:hover:bg-darkOther-300 w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-other-200 hover:bg-other-300 md:py-4 md:text-lg md:px-10\">\r\n                            Get started\r\n                            </a>\r\n                        </div>\r\n                        <div className=\"mt-3 rounded-md shadow sm:mt-0 sm:ml-3\">\r\n                            <a href=\"#\" className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-other-200 dark:text-darkOther-200 bg-white hover:bg-gray-50 md:py-4 md:text-lg md:px-10\">\r\n                            Contact\r\n                            </a>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"relative w-full h-64 sm:h-72 md:h-96 lg:absolute lg:inset-y-0 lg:right-0 lg:w-1/2 lg:h-full\">\r\n                    <img className=\"absolute inset-0 w-full h-full px-24 mt-12\" src=\"https://axaguildev.github.io/react-toolkit/v1.0.0/storybook/images/react.svg\" alt=\"\" />\r\n                    </div>\r\n                </main>\r\n                </div>\r\n\r\n            \r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Settings","E:\\dashboard-react\\src\\components\\userDashboard\\dashboard.js",["135","136"],"import '../../static/styles/main.css'; \r\nimport React, { useState, useEffect } from 'react';\r\nimport  { useHistory  } from 'react-router-dom'\r\n\r\nimport { AiOutlineMail } from 'react-icons/ai';\r\nimport { BiCalendar } from 'react-icons/bi'\r\nimport { FaUserCircle } from 'react-icons/fa'\r\nimport { IoKeyOutline } from 'react-icons/io5'\r\n\r\nconst Dashboard = () => {\r\n    let history = useHistory()\r\n\r\n    const [loaded, setLoaded] = useState(false)\r\n    const [name, setName] = useState(\"\")\r\n    const [discrim, setDiscrim] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [key, setKey] = useState(\"\")\r\n    const [joinDate, setJoinDate] = useState(\"\")\r\n    const [discordImage, setDiscordImage] = useState(\"\")\r\n\r\n    async function fetchData(){\r\n        const res = await fetch('/discord/data');\r\n        res.json()\r\n        .then(res => {\r\n            if(res.key == 'n/a') {\r\n                history.push('/bind')\r\n            }\r\n            setEmail(res.email)\r\n            setKey(res.key)\r\n            var date = new Date(res.dateJoined)\r\n            var day = date.getDate();\r\n            var month = ['January','February','March','April','May','June','July','August','September','October','November','December'][date.getMonth()]\r\n            var year = date.getFullYear()\r\n            setJoinDate(`${month} ${day}, ${year}`)\r\n            setDiscordImage(res.discordImage)\r\n            setName(res.name)\r\n            setDiscrim(res.discrim)\r\n            setLoaded(true)\r\n        })\r\n        .catch(err =>  {\r\n            \r\n        });\r\n        \r\n    }\r\n\r\n    useEffect(() =>{\r\n        const abortController = new AbortController();\r\n        fetchData()\r\n\r\n\r\n        return () => {\r\n            abortController.abort();\r\n        };\r\n\r\n    }, [])\r\n\r\n        return (\r\n            <>\r\n\r\n                <div className=\"flex flex-col w-0 flex-1 overflow-hidden\">\r\n                    <div className=\"m-auto\">\r\n\r\n                        <div class=\"bg-white overflow-hidden shadow rounded-lg divide-y divide-gray-200\">\r\n                            <div class=\"px-4 py-5 sm:px-6\">\r\n                                <h1 className=\"text-lg font-medium text-gray-700\">Dashboard</h1>\r\n                            </div>\r\n                            \r\n                            {loaded ? <div class=\"px-4 py-5 sm:p-6\">\r\n\r\n                            <div className=\"mt-1 relative\">\r\n\r\n                            <div className=\"pl-3 flex items-center\">\r\n\r\n                                {discordImage ? <img src={discordImage} className=\"rounded-full h-16 w-auto text-other-200 font-medium\" alt=\"\"/> : <FaUserCircle className=\"h-14 w-auto text-other-200 font-medium\"/>}\r\n\r\n                                <h1 className=\"font-medium text-gray-900 text-2xl ml-3\">{name}</h1>#<p className=\"font-normal text-other-200 text-md\">{discrim}</p>\r\n\r\n                            </div>\r\n\r\n\r\n                            </div>\r\n\r\n                            <div className=\"mt-1 relative rounded-md shadow-sm rounded-lg p-5\">\r\n\r\n                                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n\r\n                                    <AiOutlineMail className=\"h-6 w-auto text-other-200 font-medium\"/>\r\n\r\n                                </div>\r\n\r\n                                <p  name=\"email\" id=\"email\" autoComplete=\"off\" className=\"focus:ring-other-200 focus:border-other-200 block w-full pl-10 sm:text-sm text-gray-900 rounded-md font-normal lg:text-lg\">{email}</p>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"mt-1 relative rounded-md shadow-sm rounded-lg p-5\">\r\n\r\n                                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                                    \r\n                                    <IoKeyOutline className=\"h-6 w-auto text-other-200 font-medium\"/>\r\n\r\n                                </div>\r\n\r\n                                <p  name=\"key\" id=\"key\" autoComplete=\"off\" className=\"focus:ring-other-200 focus:border-other-200 block w-full pl-10 sm:text-sm text-gray-900 rounded-md font-normal lg:text-lg\">{key}</p>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"mt-1 relative rounded-md shadow-sm rounded-lg p-5\">\r\n\r\n                                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                                    \r\n                                    <BiCalendar className=\"h-6 w-auto text-other-200 font-medium\"/>\r\n\r\n                                </div>\r\n\r\n                                <p  name=\"joined\" id=\"joined\" autoComplete=\"off\" className=\"focus:ring-other-200 focus:border-other-200 block w-full pl-10 sm:text-sm text-gray-900 rounded-md font-normal lg:text-lg\"><span className=\"text-other-200\">Joined</span> {joinDate}</p>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            </div> : <h1 className=\"font-medium text-gray-900 text-md\">Loading...</h1>}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </>\r\n        );\r\n\r\n}\r\n\r\nexport default Dashboard;\r\n","E:\\dashboard-react\\src\\components\\bindPage\\bindPage.js",["137"],"import '../../static/styles/main.css'; \r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport UserNav from '../userNav'\r\nimport { IoKeyOutline } from 'react-icons/io5'\r\nimport { BiLogInCircle } from 'react-icons/bi'\r\nimport { FaUserCircle } from 'react-icons/fa'\r\n\r\nconst BindPage = () => {\r\n    const [name, setName] = useState(\"\")\r\n    const [discrim, setDiscrim] = useState(\"\")\r\n    const [key, setKey] = useState(\"\")\r\n    const [discordImage, setDiscordImage] = useState(\"\")\r\n\r\n    async function fetchData(){\r\n        const res = await fetch('/discord/data');\r\n        res.json()\r\n        .then(res => {\r\n            setDiscordImage(res.discordImage)\r\n            setName(res.name)\r\n            setDiscrim(res.discrim)\r\n        })\r\n        .catch(err =>  {console.log(err)});\r\n        \r\n    }\r\n\r\n    useEffect(() =>{\r\n        const abortController = new AbortController();\r\n        fetchData()\r\n\r\n\r\n        return () => {\r\n            abortController.abort();\r\n        };\r\n\r\n    }, [])\r\n\r\n    \r\n    const submitHandler = async (e) => {\r\n        e.preventDefault()\r\n\r\n        if(key.length > 0) {\r\n            var response = await fetch('/users/bind', {\r\n                method:'post',\r\n                body:JSON.stringify({\r\n                    key:key\r\n                }),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n            if(response.ok) {\r\n                setKey(\"\")\r\n\r\n                return\r\n            }else{\r\n                return\r\n            }\r\n        }\r\n        else{\r\n            return;\r\n        }\r\n    }\r\n\r\n        return (\r\n            <>\r\n                {/* <UserNav /> */}\r\n                <div className=\"flex flex-col w-0 flex-1 overflow-hidden\">\r\n                    <div className=\"m-auto\">\r\n\r\n                        <div class=\"bg-white overflow-hidden shadow rounded-lg divide-y divide-gray-200\">\r\n                            <div class=\"px-4 py-5 sm:px-6\">\r\n                                <h1 className=\"text-lg font-medium text-gray-700\">Bind License</h1>\r\n                            </div>\r\n                            <div class=\"px-4 py-5 sm:p-6\">\r\n\r\n                                <div className=\"mt-1 relative\">\r\n\r\n                                    <div className=\"pl-3 flex items-center\">\r\n\r\n                                        {discordImage ? <img src={discordImage} className=\"rounded-full h-16 w-auto text-other-200 font-medium\" alt=\"\"/> : <FaUserCircle className=\"h-14 w-auto text-other-200 font-medium\"/>}\r\n\r\n                                        <h1 className=\"font-medium text-gray-900 text-2xl ml-3\">{name}</h1>#<p className=\"font-normal text-other-200 text-md\">{discrim}</p>\r\n\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                                \r\n\r\n                                <div>\r\n                                    {/* <label for=\"email\" class=\"block text-sm font-medium text-gray-700\">Search candidates</label> */}\r\n                                    <form onSubmit={submitHandler}>\r\n                                    <div class=\"mt-1 flex rounded-md shadow-sm\">\r\n\r\n                                        <div class=\"relative flex items-stretch flex-grow focus-within:z-10\">\r\n                                            <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                                                <IoKeyOutline className=\"h-5 w-5 text-gray-400\"/>\r\n                                            </div>\r\n\r\n                                        \r\n                                            <input value={key} onChange={e => setKey(e.target.value)} type=\"text\" name=\"key\" id=\"key\" autoComplete=\"off\" class=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full rounded-none rounded-l-md pl-10 sm:text-sm border-gray-300\" placeholder=\"XXX-XXX-XXX-XXX-XXX\" />\r\n                                        </div>\r\n\r\n                                        <button type=\"submit\" class=\"-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500\">\r\n                \r\n                                        <BiLogInCircle className=\"h-5 w-5 text-gray-400\"/>\r\n\r\n                                        <span>Bind Key</span>\r\n\r\n                                        </button>\r\n\r\n                                    </div>\r\n                                    </form>\r\n                                </div>\r\n\r\n\r\n\r\n                                \r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </>\r\n        );\r\n\r\n}\r\n\r\nexport default BindPage;\r\n","E:\\dashboard-react\\src\\components\\userNav.js",["138"],"import '../static/styles/main.css'; \r\nimport React, {useState, useEffect} from 'react';\r\n\r\n\r\n\r\n\r\nconst UserNav = () =>  {\r\n\r\n    useEffect(() =>{\r\n        const abortController = new AbortController();\r\n        \r\n\r\n        return () => {\r\n            abortController.abort();\r\n        };\r\n\r\n    }, [])\r\n\r\n    // render() {\r\n        return (\r\n\r\n            <div className=\"h-16 mt-5\">\r\n                        \r\n                        <div className=\"flex-1 px-4 flex justify-between bg-other-100\">\r\n                            <div className=\"flex-1 flex\">\r\n                                <h1 className=\"text-color-900 font-medium text-xl\">VenetiaCLI</h1>\r\n                            </div>\r\n            \r\n\r\n                        </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default UserNav;",{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":9,"column":8,"nodeType":"145","messageId":"146","endLine":9,"endColumn":16},{"ruleId":"143","severity":1,"message":"147","line":2,"column":28,"nodeType":"145","messageId":"146","endLine":2,"endColumn":37},{"ruleId":"143","severity":1,"message":"148","line":21,"column":43,"nodeType":"145","messageId":"146","endLine":21,"endColumn":45},{"ruleId":"143","severity":1,"message":"149","line":2,"column":17,"nodeType":"145","messageId":"146","endLine":2,"endColumn":25},{"ruleId":"143","severity":1,"message":"147","line":2,"column":27,"nodeType":"145","messageId":"146","endLine":2,"endColumn":36},{"ruleId":"143","severity":1,"message":"150","line":2,"column":19,"nodeType":"145","messageId":"146","endLine":2,"endColumn":23},{"ruleId":"151","severity":1,"message":"152","line":15,"column":5,"nodeType":"145","endLine":15,"endColumn":14,"suggestions":"153"},{"ruleId":"151","severity":1,"message":"154","line":15,"column":16,"nodeType":"155","endLine":24,"endColumn":6},{"ruleId":"156","severity":1,"message":"157","line":27,"column":14,"nodeType":"158","messageId":"159","endLine":27,"endColumn":16},{"ruleId":"160","severity":1,"message":"161","line":66,"column":96,"nodeType":"162","endLine":66,"endColumn":109},{"ruleId":"160","severity":1,"message":"161","line":138,"column":96,"nodeType":"162","endLine":138,"endColumn":109},{"ruleId":"156","severity":1,"message":"157","line":75,"column":56,"nodeType":"158","messageId":"159","endLine":75,"endColumn":58},{"ruleId":"163","severity":1,"message":"164","line":75,"column":238,"nodeType":"165","endLine":75,"endColumn":382},{"ruleId":"160","severity":1,"message":"161","line":216,"column":102,"nodeType":"162","endLine":216,"endColumn":191},{"ruleId":"156","severity":1,"message":"157","line":225,"column":55,"nodeType":"158","messageId":"159","endLine":225,"endColumn":57},{"ruleId":"160","severity":1,"message":"161","line":247,"column":106,"nodeType":"162","endLine":247,"endColumn":223},{"ruleId":"160","severity":1,"message":"161","line":294,"column":120,"nodeType":"162","endLine":294,"endColumn":226},{"ruleId":"143","severity":1,"message":"147","line":2,"column":28,"nodeType":"145","messageId":"146","endLine":2,"endColumn":37},{"ruleId":"143","severity":1,"message":"148","line":22,"column":43,"nodeType":"145","messageId":"146","endLine":22,"endColumn":45},{"ruleId":"156","severity":1,"message":"157","line":61,"column":118,"nodeType":"158","messageId":"159","endLine":61,"endColumn":120},{"ruleId":"156","severity":1,"message":"157","line":62,"column":114,"nodeType":"158","messageId":"159","endLine":62,"endColumn":116},{"ruleId":"166","severity":1,"message":"167","line":87,"column":29,"nodeType":"165","endLine":87,"endColumn":179},{"ruleId":"166","severity":1,"message":"167","line":88,"column":29,"nodeType":"165","endLine":88,"endColumn":179},{"ruleId":"166","severity":1,"message":"167","line":89,"column":29,"nodeType":"165","endLine":89,"endColumn":179},{"ruleId":"166","severity":1,"message":"167","line":90,"column":29,"nodeType":"165","endLine":90,"endColumn":179},{"ruleId":"160","severity":1,"message":"161","line":106,"column":66,"nodeType":"162","endLine":106,"endColumn":76},{"ruleId":"156","severity":1,"message":"157","line":46,"column":48,"nodeType":"158","messageId":"159","endLine":46,"endColumn":50},{"ruleId":"156","severity":1,"message":"157","line":52,"column":51,"nodeType":"158","messageId":"159","endLine":52,"endColumn":53},{"ruleId":"156","severity":1,"message":"157","line":56,"column":49,"nodeType":"158","messageId":"159","endLine":56,"endColumn":51},{"ruleId":"156","severity":1,"message":"157","line":75,"column":38,"nodeType":"158","messageId":"159","endLine":75,"endColumn":40},{"ruleId":"160","severity":1,"message":"161","line":92,"column":66,"nodeType":"162","endLine":92,"endColumn":76},{"ruleId":"143","severity":1,"message":"147","line":2,"column":28,"nodeType":"145","messageId":"146","endLine":2,"endColumn":37},{"ruleId":"166","severity":1,"message":"167","line":58,"column":29,"nodeType":"165","endLine":58,"endColumn":62},{"ruleId":"166","severity":1,"message":"167","line":64,"column":33,"nodeType":"165","endLine":64,"endColumn":66},{"ruleId":"143","severity":1,"message":"147","line":2,"column":28,"nodeType":"145","messageId":"146","endLine":2,"endColumn":37},{"ruleId":"166","severity":1,"message":"167","line":23,"column":25,"nodeType":"165","endLine":23,"endColumn":37},{"ruleId":"168","severity":1,"message":"169","line":57,"column":62,"nodeType":"158","messageId":"170","endLine":57,"endColumn":63},{"ruleId":"166","severity":1,"message":"167","line":62,"column":29,"nodeType":"165","endLine":62,"endColumn":255},{"ruleId":"156","severity":1,"message":"157","line":25,"column":24,"nodeType":"158","messageId":"159","endLine":25,"endColumn":26},{"ruleId":"151","severity":1,"message":"171","line":55,"column":8,"nodeType":"172","endLine":55,"endColumn":10,"suggestions":"173"},{"ruleId":"143","severity":1,"message":"174","line":4,"column":8,"nodeType":"145","messageId":"146","endLine":4,"endColumn":15},{"ruleId":"143","severity":1,"message":"149","line":2,"column":16,"nodeType":"145","messageId":"146","endLine":2,"endColumn":24},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'SiteHome' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'td' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setAppName'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["177"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["178"],"'UserNav' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},"Add dependencies array: []",{"range":"183","text":"184"},"Update the dependencies array to be: [fetchData]",{"range":"185","text":"186"},[931,931],", []",[1762,1764],"[fetchData]"]