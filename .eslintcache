[{"E:\\dashboard-react\\src\\index.js":"1","E:\\dashboard-react\\src\\reportWebVitals.js":"2","E:\\dashboard-react\\src\\App.js":"3","E:\\dashboard-react\\src\\components\\users\\users.js":"4","E:\\dashboard-react\\src\\components\\home\\home.js":"5","E:\\dashboard-react\\src\\components\\adminNav.js":"6","E:\\dashboard-react\\src\\components\\adminSearch.js":"7","E:\\dashboard-react\\src\\components\\home\\planModal.js":"8","E:\\dashboard-react\\src\\components\\home\\restockModal.js":"9","E:\\dashboard-react\\src\\components\\licenses\\licenses.js":"10","E:\\dashboard-react\\src\\components\\licenses\\licenseModal.js":"11","E:\\dashboard-react\\src\\components\\licenses\\table.js":"12","E:\\dashboard-react\\src\\components\\users\\table.js":"13","E:\\dashboard-react\\src\\components\\settings\\settings.js":"14","E:\\dashboard-react\\src\\components\\home\\planTable.js":"15","E:\\dashboard-react\\src\\components\\home\\restockTable.js":"16","E:\\dashboard-react\\src\\components\\siteHomePage\\home.js":"17","E:\\dashboard-react\\src\\components\\userDashboard\\dashboard.js":"18"},{"size":265,"mtime":1611228962182,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1611220658625,"results":"21","hashOfConfig":"20"},{"size":1249,"mtime":1611756600016,"results":"22","hashOfConfig":"20"},{"size":4515,"mtime":1611770748627,"results":"23","hashOfConfig":"20"},{"size":7669,"mtime":1611772952722,"results":"24","hashOfConfig":"20"},{"size":12803,"mtime":1611770435843,"results":"25","hashOfConfig":"20"},{"size":6145,"mtime":1611775717340,"results":"26","hashOfConfig":"20"},{"size":19736,"mtime":1611771021155,"results":"27","hashOfConfig":"20"},{"size":9111,"mtime":1611771392142,"results":"28","hashOfConfig":"20"},{"size":5744,"mtime":1611771724558,"results":"29","hashOfConfig":"20"},{"size":8877,"mtime":1611771007834,"results":"30","hashOfConfig":"20"},{"size":6226,"mtime":1611764588264,"results":"31","hashOfConfig":"20"},{"size":4609,"mtime":1611769950073,"results":"32","hashOfConfig":"20"},{"size":11450,"mtime":1611771548845,"results":"33","hashOfConfig":"20"},{"size":6529,"mtime":1611762067784,"results":"34","hashOfConfig":"20"},{"size":6651,"mtime":1611762133663,"results":"35","hashOfConfig":"20"},{"size":4248,"mtime":1611758938732,"results":"36","hashOfConfig":"20"},{"size":4962,"mtime":1611754959077,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1e4mu7r",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"40"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"E:\\dashboard-react\\src\\index.js",[],["88","89"],"E:\\dashboard-react\\src\\reportWebVitals.js",[],"E:\\dashboard-react\\src\\App.js",["90"],"import './static/styles/main.css';\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport React, { Component } from 'react';\n\nimport Home from './components/home/home'\nimport Licenses from './components/licenses/licenses'\nimport Users from './components/users/users'\nimport Settings from './components/settings/settings'\nimport SiteHome from './components/siteHomePage/home'\nimport Dashboard from './components/userDashboard/dashboard'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"h-screen flex w-screen overflow-hidden bg-other-100 dark:bg-darkOther-100\">\n\n        <Router>\n\n            {/* <div className=\"container mx-auto\"> */}\n              <Switch>\n                {/* <Route exact path='/' component={SiteHome} /> */}\n                <Route exact path='/dashboard' component={Dashboard} />\n\n                <Route exact path='/home' component={Home} />\n                <Route exact path='/licenses' component={Licenses}/>\n                <Route exact path='/users' component={Users}/>\n                <Route exact path='/settings' component={Settings}/>\n              </Switch>\n            {/* </div> */}\n          \n\n        </Router>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","E:\\dashboard-react\\src\\components\\users\\users.js",["91","92"],"import '../../static/styles/main.css'; \r\nimport React, { Component, useEffect } from 'react';\r\nimport UserTable from './table';\r\nimport AdminNavigation from '../adminNav';\r\nimport AdminSearchbar from '../adminSearch';\r\n\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\n\r\n\r\nclass Users extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {}\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        function filter() {\r\n            var input, filter, table, tr, td, i, txtValue;\r\n            input = document.getElementById(\"searchInput\");\r\n            filter = input.value.toUpperCase();\r\n            table = document.getElementById(\"table\");\r\n            tr = table.getElementsByTagName(\"tr\");\r\n            \r\n            // Loop through all table rows, and hide those who don't match the search query\r\n            for (i = 0; i < tr.length; i++) {\r\n                try{\r\n                    var td1 = tr[i].getElementsByTagName(\"td\")[2];\r\n\r\n                    txtValue = td1.textContent || td1.innerText;\r\n                    if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n                        tr[i].style.display = \"\";\r\n                    } else {\r\n                        tr[i].style.display = \"none\";\r\n                    }\r\n\r\n                }catch(e){\r\n                    console.log(e)\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <>\r\n                <AdminNavigation />\r\n                <div className=\"flex flex-col w-0 flex-1 overflow-hidden\">\r\n                <AdminSearchbar />\r\n                <main className=\"flex-1 relative overflow-y-auto focus:outline-none\" id=\"main\" tabIndex='0'>\r\n\r\n                    {/* style=\"min-height: 650px;max-height: 650px;\" */}\r\n                    <div className=\"bg-gray-100 overflow-hidden shadow rounded-lg divide-y mr-12 mt-5 dark:bg-darkOther-200\">\r\n\r\n                        <div className=\"px-4 py-5 sm:px-6\">\r\n\r\n                            <dl className=\"sm:grid sm:grid-cols-2\">\r\n\r\n                                <div className=\"flex flex-col p-2  bg-gray-100 mr-5 dark:bg-darkOther-200\">\r\n\r\n                                    <h1  className=\"dark:text-white\">Users</h1>\r\n\r\n                                    <div className=\"relative w-full text-gray-400 focus-within:text-gray-600\">\r\n\r\n                                        <div className=\"absolute inset-y-0 left-0 flex items-center pointer-events-none\">\r\n                                            <AiOutlineSearch className=\"h-5 w-5 text-gray-900 dark:text-other-100\"/>\r\n                                        </div>   \r\n                                                                               \r\n                                        <input id=\"searchInput\" onKeyUp={filter} autoComplete=\"off\" className=\"dark:text-white dark:bg-darkOther-200 bg-gray-100 block w-full h-full pl-8 pr-3 py-2 text-gray-900 placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-0 focus:border-transparent sm:text-sm\" placeholder=\"Search by Key\" type=\"search\" name=\"search\" />\r\n                                    \r\n                                    </div>\r\n        \r\n                                </div>\r\n\r\n\r\n                            </dl>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"px-4 py-5 sm:p-6\">\r\n    \r\n\r\n                            <div className=\"flex flex-col \">\r\n\r\n                                <div className=\"-my-2 overflow-y-auto sm:-mx-6 lg: mr-12 dark:bg-darkOther-200\" style={{'min-height': '400px', 'max-height': '800px'}}>\r\n                                    <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\" >\r\n                                        \r\n                                        <div className=\"shadow overflow-hidden border-gray-200\">\r\n\r\n                                            {/* Table */}\r\n                                            <UserTable />\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <footer>\r\n                        <p className=\"text-sm font-small text-gray-600\">Invincible Services | 2021 | Thank you for using our services</p>\r\n                    </footer>\r\n   \r\n                </main>\r\n                </div>\r\n            \r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Users","E:\\dashboard-react\\src\\components\\home\\home.js",["93","94"],"import '../../static/styles/main.css'; \r\nimport React, { useState, useEffect } from 'react';\r\nimport PlanModal from './planModal';\r\nimport RestockModal from './restockModal';\r\nimport PlanTable from './planTable';\r\nimport RestockTable from './restockTable';\r\n\r\nimport AdminNavigation from '../adminNav';\r\nimport AdminSearchbar from '../adminSearch';\r\n\r\nimport { FaPlus } from 'react-icons/fa';\r\n\r\n\r\nconst Home = () => {\r\n\r\n        return (\r\n            <>\r\n                <AdminNavigation />\r\n                <div className=\"flex flex-col w-0 flex-1 overflow-hidden\">\r\n                    <AdminSearchbar />\r\n                <main className=\"flex-1 relative overflow-y-auto focus:outline-none\">\r\n                    <div className=\"py-6\">\r\n                        \r\n\r\n\r\n                        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 md:px-8\"></div>\r\n                                    \r\n\r\n                        <div className=\"mx-auto px-4 sm:px-6 md:px-8 w-full \">\r\n                            <div className=\"relative w-full\">\r\n                                <div className=\"overflow-hidden shadow divide-y mb-5 rounded-lg\">\r\n                                    <dl className=\"shadow-lg md:grid md:grid-cols-3\">\r\n                                        <div className=\"flex flex-col border-b border-gray-200 p-6 text-center sm:border-0 dark:bg-darkOther-200 bg-white\">\r\n                                          <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-900 dark:text-white\">\r\n                                            Total Licenses\r\n                                          </dt>\r\n                                          <dd className=\"order-1 text-5xl font-extrabold text-yellow-500\">\r\n                                            421\r\n                                          </dd>\r\n                                        </div>\r\n                                        <div className=\"flex flex-col border-t border-b border-gray-100 p-6 text-center sm:border-0 dark:bg-darkOther-200 bg-white\">\r\n                                          <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-900 dark:text-white\">\r\n                                            Monthly Revenue\r\n                                          </dt>\r\n                                          <dd className=\"order-1 text-5xl font-extrabold text-green-500\">\r\n                                            $21730\r\n                                          </dd>\r\n                                        </div>\r\n                                        <div className=\"flex flex-col border-t border-gray-100 p-6 text-center sm:border-0 white dark:bg-darkOther-200 bg-white\">\r\n                                          <dt className=\"order-2 mt-2 text-lg leading-6 font-medium text-gray-900 dark:text-white\">\r\n                                            Customers Today\r\n                                          </dt>\r\n                                          <dd className=\"order-1 text-5xl font-extrabold text-blue-500\">\r\n                                            23\r\n                                          </dd>\r\n                                        </div>\r\n                                    </dl>\r\n                                </div>\r\n                            </div>\r\n                        \r\n\r\n                            <dl className=\"lg:grid md:grid-cols-2 gap-4 sm:rounded-lg\">\r\n    \r\n                                <div className=\"flex flex-col  p-6 text-center bg-white mt-5 w-full dark:bg-darkOther-200 rounded-lg\" style={{'min-height': '400px', 'max-height': '800px'}}>\r\n                                    <div className=\"sm:grid sm:grid-cols-2\">\r\n                                        <div className=\"text-left\">\r\n                                        <h1 className=\"text-md font-medium text-other-200 dark:text-white\">Plans</h1>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <button name=\"plan-modal\" id=\"plan-button-hide\" type=\"button\" className=\"inline-flex items-center px-3 py-2 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md dark:text-white bg-other-100 dark:bg-other-200 text-other-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-other-200 dark:focus:ring-darkOther-200\" onClick={() => {\r\n                                                document.querySelector('#plan-modal').classList.contains('hidden') ? document.querySelector('#plan-modal').classList.remove('hidden') : document.querySelector('#plan-modal').classList.add('hidden')\r\n                                            }}>\r\n                                                <FaPlus className=\"-ml-0.5 mr-2 h-4 w-4 text-white\" id='hide' />\r\n                                                New Plan\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                \r\n    \r\n                                    <PlanTable />\r\n                                    \r\n                                </div>\r\n\r\n                                {/* PLAN CREATE MODAL */}\r\n                                <PlanModal />\r\n\r\n    \r\n\r\n\r\n                                <div className=\"flex flex-col  p-6 text-center bg-white mt-5 dark:bg-darkOther-200 rounded-lg\" style={{'min-height': '400px', 'max-height': '800px'}}>\r\n                                    <div className=\"sm:grid sm:grid-cols-2\">\r\n                                        <div className=\"text-left\">\r\n                                            <h1 className=\"text-md font-medium text-other-200 dark:text-white\">Restocks</h1>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            <button name=\"restock-modal\" id=\"restock-button-hide\" type=\"button\" className=\"inline-flex items-center px-3 py-2 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md dark:text-white bg-other-100 dark:bg-other-200 text-other-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-other-200 dark:focus:ring-darkOther-200\" onClick={() => {\r\n                                                document.querySelector('#restock-modal').classList.contains('hidden') ? document.querySelector('#restock-modal').classList.remove('hidden') : document.querySelector('#restock-modal').classList.add('hidden')\r\n                                            }}>\r\n                                            <FaPlus className=\"-ml-0.5 mr-2 h-4 w-4 text-white\" id='hide' />\r\n                                            New Restock\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <RestockTable />\r\n\r\n                                </div>\r\n\r\n                                {/* Create Restock Modal */}\r\n                                <RestockModal />\r\n\r\n                                \r\n\r\n      \r\n    \r\n                        </dl>\r\n                    </div>\r\n    \r\n\r\n                    </div>\r\n\r\n                    \r\n\r\n                    <footer>\r\n                        <p className=\"text-sm font-small text-gray-600\">Invincible Services | 2021 | Thank you for using our services</p>\r\n                    </footer>\r\n\r\n                </main>\r\n\r\n                </div>\r\n\r\n                \r\n\r\n            </>\r\n        );\r\n\r\n}\r\n\r\nexport default Home;\r\n","E:\\dashboard-react\\src\\components\\adminNav.js",["95","96","97","98","99","100"],"import '../static/styles/main.css'; \r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport { React, useEffect, useState } from 'react';\r\nimport { Switch } from '@headlessui/react'\r\nimport { AiOutlineHome, AiOutlineCloseCircle } from 'react-icons/ai';\r\nimport { BiExport, BiSun, BiMoon } from 'react-icons/bi';\r\nimport { FiUsers, FiSettings } from 'react-icons/fi';\r\nimport { IoKeyOutline } from 'react-icons/io5';\r\n\r\nconst AdminNavigation = () =>  {\r\n    const [appName, setAppName] = useState(\"\")\r\n    const [appImage, setAppImage] = useState(\"\")\r\n    const [darkMode, setDarkMode] = useState(false)\r\n\r\n    useEffect( async () => {\r\n        var response = await fetch('/api/v1/accounts/data')\r\n        if(response.ok) {\r\n            var responseBody = await response.json()\r\n            console.log(responseBody)\r\n\r\n            setAppName(responseBody.name)\r\n            setAppImage(responseBody.serverImage)\r\n        }\r\n    })\r\n\r\n    const changeDarkMode = (e) => {\r\n        if(e == true) {\r\n            // dark mode on\r\n            console.log(document.documentElement)\r\n            document.documentElement.classList.add('dark');\r\n        }else{\r\n            // dark mode off\r\n            document.documentElement.classList.remove('dark');\r\n        }\r\n    }\r\n\r\n\r\n    // render() {\r\n        return (\r\n            \r\n            <div className=\"h-screen flex\">\r\n                \r\n\r\n                <div className=\"md:hidden\">\r\n                    \r\n                    <div className=\"fixed inset-0 flex z-40\">\r\n    \r\n                    <div className=\"fixed inset-0\" aria-hidden=\"true\" id=\"mob-screen\">\r\n                        <div className=\"absolute inset-0 bg-gray-600 opacity-75\"></div>\r\n                    </div>\r\n    \r\n                    <div className=\"relative flex-1 flex flex-col max-w-xs w-full pt-5 pb-4 bg-other-100 dark:bg-darkOther-100\" id=\"mob-nav\">\r\n                        <div className=\"absolute top-0 right-0 -mr-12 pt-2\">\r\n                        <button className=\"ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\" onClick={() => {\r\n                            document.querySelector('#mob-nav').classList.contains('hidden') ? document.querySelector('#mob-nav').classList.remove('hidden') : document.querySelector('#mob-nav').classList.add('hidden')\r\n                            document.querySelector('#mob-screen').classList.contains('hidden') ? document.querySelector('#mob-screen').classList.remove('hidden') : document.querySelector('#mob-screen').classList.add('hidden')\r\n                        }}>\r\n                            <span className=\"sr-only\">Close sidebar</span>\r\n                            <AiOutlineCloseCircle className=\"h-6 w-6 text-white\" id='hide'/>\r\n                        </button>\r\n                        </div>\r\n                        \r\n                        <div className=\"flex-shrink-0 flex items-center px-4\">\r\n                        <img alt={appName} className=\"h-16 w-auto rounded-full\" src={appImage} alt={appName} /> <span className=\"text-2xl font-medium text-other-200 ml-2 text-20 dark:text-other-100\">{appName}</span>\r\n                        </div>\r\n    \r\n                        <div className=\"mt-5 flex-1 h-0 overflow-y-auto \" >\r\n                        <nav className=\"px-2 space-y-1 \">\r\n                            <NavLink to='/home' activeClassName=\"dark:text-other-100 text-darkOther-100\" className=\"text-white\">\r\n                                <span className=\"hover:text-other-100 dark:hover:text-other-100 hover:text-darkOther-100 group flex items-center px-2 py-2 text-sm font-medium rounded-md\">\r\n                                <AiOutlineHome className=\"hover:text-other-20 mr-3 h-6 w-6\" id='hide'/>\r\n                                Home\r\n                                </span>\r\n                            </NavLink>\r\n                \r\n                            <NavLink to='/licenses' activeClassName=\"dark:text-other-100 text-darkOther-100\" className=\"text-white\">\r\n                                <span className=\"hover:text-other-100 dark:hover:text-other-100 hover:text-darkOther-100 group flex items-center px-2 py-2 text-sm font-medium rounded-md\">\r\n                                <IoKeyOutline className=\"hover:text-other-200 mr-3 h-6 w-6\"/>\r\n                                Licenses\r\n                                </span>\r\n                            </NavLink>\r\n                \r\n                            <NavLink to='/users' activeClassName=\"dark:text-other-100 text-darkOther-100\" className=\"text-white\">\r\n                                <span className=\"hover:text-other-100 dark:hover:text-other-100 hover:text-darkOther-100 group flex items-center px-2 py-2 text-sm font-medium rounded-md\">\r\n                                <FiUsers className=\"hover:text-other-200 mr-3 h-6 w-6\" />\r\n                                Users\r\n                                </span>\r\n                            </NavLink>\r\n                \r\n                            <NavLink to='/settings' activeClassName=\"dark:text-other-100 text-darkOther-100\" className=\"text-white\">\r\n                                <span className=\"hover:text-other-100 dark:hover:text-other-100 hover:text-darkOther-100 group flex items-center px-2 py-2 text-sm font-medium rounded-md\">\r\n                                <FiSettings className=\"hover:text-other-200 mr-3 h-6 w-6\" />\r\n                                Settings\r\n                                </span>\r\n                            </NavLink>\r\n                \r\n                            <span className=\"text-white hover:text-other-100 dark:hover:text-other-100 hover:text-darkOther-100 group flex items-center px-2 py-2 text-sm font-medium rounded-md \">\r\n                            <BiExport className=\"hover:text-other-200 mr-3 h-6 w-6 \" />\r\n                            Export\r\n                            </span>\r\n\r\n                            <div class=\"flex items-center\">\r\n                            <Switch \r\n                            checked={darkMode}\r\n                            onChange={e => {\r\n                                setDarkMode(e)\r\n                                changeDarkMode(e)\r\n                            }}\r\n                            as=\"button\" \r\n                            className={`${darkMode ? \"bg-green-400\" : \"bg-gray-200\"} relative inline-flex flex-shrink-0 h-4 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none`}>\r\n\r\n                                {darkMode ? \r\n                                <span aria-hidden=\"true\" className=\"pointer-events-none translate-x-0 inline-block h-3 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200\"></span> : \r\n                                <span aria-hidden=\"true\" className=\"pointer-events-none translate-x-5 inline-block h-3 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200\"></span>\r\n                                }\r\n\r\n                            </Switch>\r\n                \r\n                            <span class=\"ml-3\" id=\"toggleLabel\">\r\n                                <span class=\"text-sm font-medium text-darkOther-100 dark:text-white\">{darkMode ? \"Dark Mode\" : \"Light Mode\"}</span>\r\n                            </span>\r\n                            </div>\r\n                        </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex-shrink-0 w-14\" aria-hidden=\"true\">\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n    \r\n                <div className=\"hidden md:flex md:flex-shrink-0\">\r\n                <div className=\"flex flex-col w-64\">\r\n                <div className=\"flex flex-col flex-grow pt-5 pb-4 bg-other-100 dark:bg-darkOther-100 overflow-y-auto\">\r\n                    <div className=\"flex items-center flex-shrink-0 px-4\">\r\n                        <img alt={appName} className=\"h-16 w-auto rounded-full\" src={appImage} alt={appName} /> <span className=\"text-2xl font-medium text-other-200 ml-2 text-20 dark:text-other-100\">{appName}</span>\r\n                    </div>\r\n                    <div className=\"mt-5 flex-grow flex flex-col\">\r\n                    <nav className=\"flex-1 px-2 bg-other-100 dark:bg-darkOther-100 space-y-1\">\r\n                        \r\n                            <NavLink to='/home' activeClassName=\"dark:text-other-100 text-darkOther-100\" className=\"text-white\">\r\n                                <span className=\"hover:text-other-100 dark:hover:text-other-100 hover:text-darkOther-100 group flex items-center px-2 py-2 text-sm font-medium rounded-md\">\r\n                                <AiOutlineHome className=\"hover:text-other-20 mr-3 h-6 w-6\" id='hide'/>\r\n                                Home\r\n                                </span>\r\n                            </NavLink>\r\n                \r\n                            <NavLink to='/licenses' activeClassName=\"dark:text-other-100 text-darkOther-100\" className=\"text-white\">\r\n                                <span className=\"hover:text-other-100 dark:hover:text-other-100 hover:text-darkOther-100 group flex items-center px-2 py-2 text-sm font-medium rounded-md\">\r\n                                <IoKeyOutline className=\"hover:text-other-200 mr-3 h-6 w-6\"/>\r\n                                Licenses\r\n                                </span>\r\n                            </NavLink>\r\n                \r\n                            <NavLink to='/users' activeClassName=\"dark:text-other-100 text-darkOther-100\" className=\"text-white\">\r\n                                <span className=\"hover:text-other-100 dark:hover:text-other-100 hover:text-darkOther-100 group flex items-center px-2 py-2 text-sm font-medium rounded-md\">\r\n                                <FiUsers className=\"hover:text-other-200 mr-3 h-6 w-6\" />\r\n                                Users\r\n                                </span>\r\n                            </NavLink>\r\n                \r\n                            <NavLink to='/settings' activeClassName=\"dark:text-other-100 text-darkOther-100\" className=\"text-white\">\r\n                                <span className=\"hover:text-other-100 dark:hover:text-other-100 hover:text-darkOther-100 group flex items-center px-2 py-2 text-sm font-medium rounded-md\">\r\n                                <FiSettings className=\"hover:text-other-200 mr-3 h-6 w-6\" />\r\n                                Settings\r\n                                </span>\r\n                            </NavLink>\r\n                \r\n                            <span className=\"text-white hover:text-other-100 dark:hover:text-other-100 hover:text-darkOther-100 group flex items-center px-2 py-2 text-sm font-medium rounded-md\">\r\n                            <BiExport className=\"hover:text-other-200 mr-3 h-6 w-6\" />\r\n                            Export\r\n                            </span>\r\n\r\n                            <div className=\"grid border-t w-1/2\">\r\n                                <div className=\"\">\r\n                                    <Switch \r\n                                    checked={darkMode}\r\n                                    onChange={e => {\r\n                                        setDarkMode(e)\r\n                                        changeDarkMode(e)\r\n                                    }}\r\n                                    as=\"button\" \r\n                                    className={`${darkMode ? \"bg-darkOther-100\" : \"bg-other-100\"} shadow-md border-gray-300 border-1 mt-2 inline-flex flex-shrink-0 h-5 w-10 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none`}>\r\n\r\n                                        {darkMode ?\r\n                                         \r\n                                        <BiMoon aria-hidden=\"true\" className=\"pointer-events-none translate-x-0 inline-block h-4 w-auto rounded-full text-other-100 shadow transform ring-0 transition ease-in-out duration-200 \" />: \r\n                                        <BiSun aria-hidden=\"true\" className=\"pointer-events-none translate-x-5 inline-block h-4 w-auto rounded-full text-yellow-500 shadow transform ring-0 transition ease-in-out duration-200\" />\r\n                                        }\r\n\r\n                                    </Switch>\r\n                                </div>\r\n                    \r\n                          \r\n                            </div>\r\n\r\n                    \r\n                    </nav>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    // }\r\n}\r\n\r\nexport default AdminNavigation;\r\n","E:\\dashboard-react\\src\\components\\adminSearch.js",["101","102"],"import '../static/styles/main.css'; \r\nimport React, {useState, useEffect} from 'react';\r\n\r\n\r\nimport { AiOutlineSearch, AiOutlineMenu } from 'react-icons/ai';\r\nimport { IoNotificationsOutline } from 'react-icons/io5';\r\nimport {FaUserCircle} from 'react-icons/fa'\r\n\r\n\r\nconst AdminSearch = () =>  {\r\n\r\n    const [userImage, setUserImage] = useState(\"\")\r\n\r\n    async function fetchData(){\r\n        const res = await fetch('/discord/data');\r\n        res.json()\r\n        .then(res => {setUserImage(res.discordImage)})\r\n        .catch(err =>  {});\r\n        \r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        const abortController = new AbortController();\r\n        fetchData()\r\n\r\n        return () => {\r\n            abortController.abort();\r\n        };\r\n\r\n    }, [])\r\n\r\n    // render() {\r\n        return (\r\n\r\n            <div className=\"relative z-10 flex h-16 shadow-sm\">\r\n                        <button className=\"px-4 text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500 md:hidden\" onClick={() => {\r\n                                    document.querySelector('#mob-nav').classList.contains('hidden') ? document.querySelector('#mob-nav').classList.remove('hidden') : document.querySelector('#mob-nav').classList.add('hidden')\r\n                                    document.querySelector('#mob-screen').classList.contains('hidden') ? document.querySelector('#mob-screen').classList.remove('hidden') : document.querySelector('#mob-screen').classList.add('hidden')\r\n                            }}>\r\n                            <AiOutlineMenu className=\"h-6 w-6\"/>\r\n                        </button>\r\n                        \r\n                        <div className=\"flex-1 px-4 flex justify-between bg-other-100 dark:bg-darkOther-100 mr-2\">\r\n                            <div className=\"flex-1 flex\">\r\n                                <form className=\"w-full flex md:ml-0\" action=\"#\" method=\"GET\">\r\n                                    <label className=\"sr-only\">Search</label>\r\n                                    <div className=\"relative w-full text-gray-400 focus-within:text-gray-600\">\r\n                                    <div className=\"absolute inset-y-0 left-0 flex items-center pointer-events-none\">\r\n                                        <AiOutlineSearch className=\"h-5 w-5 text-gray-900 dark:text-other-100\"/>\r\n                                    </div>\r\n                                    <input id=\"search_field\" disabled=\"disabled\" autoComplete=\"off\" className=\"bg-other-100 dark:bg-darkOther-100 block w-full h-full pl-8 pr-3 py-2 border-transparent text-gray-900 placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-0 focus:border-transparent sm:text-sm\" placeholder=\"Search\" type=\"search\" name=\"search\" />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n            \r\n                            <div className=\"ml-4 flex items-center md:ml-6 \">\r\n                                <button className=\"p-1 rounded-full bg-darkOther-200 text-other-100 dark:bg-other-200 dark:text-other-100 focus:outline-none\" onClick={() => {\r\n                                    document.querySelector('#notif-dropdown').classList.contains('hidden') ? document.querySelector('#notif-dropdown').classList.remove('hidden') : document.querySelector('#notif-dropdown').classList.add('hidden')\r\n                                }}>\r\n                                    <span className=\"sr-only\">View notifications</span>\r\n                                    <IoNotificationsOutline className=\"h-7 w-7\" id='hide'/>\r\n                                </button>\r\n\r\n                                <div className=\"dark:bg-darkOther-200 hidden absolute right-0 mt-24 mr-24 w-48 rounded-md shadow-lg py-1 bg-white focus:outline-none\" role=\"menu\" id=\"notif-dropdown\" aria-orientation=\"vertical\">\r\n                                        <span className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-darkOther-300 dark:text-white\" role=\"menuitem\" id='hide'>No notifications</span>\r\n                                </div>\r\n                        \r\n                                <div className=\"ml-3 relative\">\r\n                                    <div>  \r\n                                        <button className=\"max-w-xs bg-white flex items-center text-sm rounded-full focus:outline-none\" id=\"profile-button-hide\" name=\"profile-dropdown\" aria-haspopup=\"true\"  onClick={() => {\r\n                                            document.querySelector('#profile-dropdown').classList.contains('hidden') ? document.querySelector('#profile-dropdown').classList.remove('hidden') : document.querySelector('#profile-dropdown').classList.add('hidden')\r\n                                        }}>\r\n                                            <span className=\"sr-only\">Open user menu</span>\r\n                                            {userImage == \"\" ? <FaUserCircle className=\"h-10 w-10 rounded-full bg-darkOther-200 text-other-100 dark:bg-other-200 dark:text-other-100 \" id=\"profile-button-hide\" name=\"profile-dropdown\" /> : <img className=\"h-8 w-8 rounded-full text-other-100 dark:text-darkOther-300\" src={userImage} id=\"profile-button-hide\" name=\"profile-dropdown\" />}\r\n                                        </button>\r\n                                    </div>\r\n            \r\n                                    <div className=\"dark:bg-darkOther-200 hidden origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white\" role=\"menu\" id=\"profile-dropdown\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu\">\r\n                                        <span href=\"#\" className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-darkOther-300 dark:text-white\" role=\"menuitem\" id='hide'>Sign out</span>\r\n                                    </div>\r\n                                </div>\r\n            \r\n                            </div>\r\n                        </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default AdminSearch;","E:\\dashboard-react\\src\\components\\home\\planModal.js",["103","104","105","106"],"import '../../static/styles/main.css'; \r\nimport React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport chroma from 'chroma-js';\r\nimport currencyOptions from '../../static/data/currencies.json'\r\nimport { Switch } from '@headlessui/react'\r\n\r\n\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\nimport { IoPricetagOutline } from 'react-icons/io5';\r\n\r\nvar planOptions = [\r\n    {label:'Recurring', value:'recurring'},\r\n    {label:'Lifetime', value:'lifetime'},\r\n    {label:'Rental', value:'rental'}\r\n]\r\nvar intervalTypeOptions = [\r\n    {label:'Day', value:'day'},\r\n    {label:'Week', value:'week'},\r\n    {label:'Month', value:'month'},\r\n    {label:'Year', value:'year'}\r\n]\r\n\r\nconst PlanModal = () => {\r\n\r\n    const [availableRoles, setavailableRoles] = useState([])\r\n    const [planName, setplanName] = useState(\"\")\r\n    const [planType, setplanType] = useState(\"\")\r\n    const [planRole, setplanRole] = useState([])\r\n    const [price, setprice] = useState(\"\")\r\n    const [priceCurrency, setpriceCurrency] = useState(\"\")\r\n    const [interval, setinterval] = useState(\"\")\r\n    const [intervalType, setintervalType] = useState(\"\")\r\n    const [unbinding, setunbinding] = useState(true)\r\n\r\n\r\n    async function fetchPlans(){\r\n        const res = await fetch('/discord/guild/roles');\r\n        res.json()\r\n        .then(res => {setavailableRoles(res.roles)})\r\n        .catch(err =>  {console.log(err)});\r\n        \r\n    }\r\n\r\n    useEffect(() =>{\r\n        const abortController = new AbortController();\r\n        fetchPlans()\r\n\r\n\r\n        return () => {\r\n            abortController.abort();\r\n        };\r\n\r\n    }, [])\r\n\r\n    const colourStyles = {\r\n        control: styles => ({ ...styles, backgroundColor: 'white' }),\r\n        option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n          const color = chroma(data.color);\r\n          return {\r\n            ...styles,\r\n            backgroundColor: isDisabled\r\n              ? null\r\n              : isSelected\r\n              ? data.color\r\n              : isFocused\r\n              ? color.alpha(0.1).css()\r\n              : null,\r\n            color: isDisabled\r\n              ? '#ccc'\r\n              : isSelected\r\n              ? chroma.contrast(color, 'white') > 2\r\n                ? 'white'\r\n                : 'black'\r\n              : data.color,\r\n            cursor: isDisabled ? 'not-allowed' : 'default',\r\n      \r\n            ':active': {\r\n              ...styles[':active'],\r\n              backgroundColor:\r\n                !isDisabled && (isSelected ? data.color : color.alpha(0.3).css()),\r\n            },\r\n          };\r\n        },\r\n        multiValue: (styles, { data }) => {\r\n          const color = chroma(data.color);\r\n          return {\r\n            ...styles,\r\n            backgroundColor: color.alpha(0.1).css(),\r\n          };\r\n        },\r\n        multiValueLabel: (styles, { data }) => ({\r\n          ...styles,\r\n          color: data.color,\r\n        }),\r\n        multiValueRemove: (styles, { data }) => ({\r\n          ...styles,\r\n          color: data.color,\r\n          ':hover': {\r\n            backgroundColor: data.color,\r\n            color: 'white',\r\n          },\r\n        }),\r\n    };\r\n\r\n\r\n    \r\n    const submitHandler = async (e) => {\r\n        e.preventDefault()\r\n\r\n        if(planName.length > 0 && planType.length > 0 && interval.length > 0) {\r\n            var response = await fetch('/api/v1/plans/add', {\r\n                method:'post',\r\n                body:JSON.stringify({\r\n                    planName:planName,\r\n                    price:price,\r\n                    currency:priceCurrency,\r\n                    type:planType,\r\n                    role:JSON.stringify(planRole),\r\n                    interval:interval,\r\n                    intervalType:intervalType,\r\n                    planId:'',\r\n                    id:'',\r\n                    unbinding:unbinding\r\n                }),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n            if(response.ok) {\r\n                setavailableRoles()\r\n                setinterval(\"\")\r\n                setintervalType(\"\")\r\n                setplanName(\"\")\r\n                setplanRole([])\r\n                setplanType(\"\")\r\n                setprice(\"\")\r\n                setpriceCurrency(\"\")\r\n                setunbinding(true)\r\n\r\n                return\r\n            }else{\r\n                return\r\n            }\r\n        }\r\n        else{\r\n            return;\r\n        }\r\n    }\r\n\r\n        \r\n        return (\r\n                <div className=\"fixed z-10 inset-0 overflow-y-auto hidden\" id=\"plan-modal\">\r\n            \r\n                    <form onSubmit={submitHandler}>\r\n                        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n\r\n                            <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n                                <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n                            </div>\r\n                \r\n                            <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\r\n\r\n            \r\n                            <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full sm:p-6 dark:bg-darkOther-200\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\r\n                        \r\n                                <div>\r\n                                    <button onClick={() => {\r\n                                        document.querySelector('#plan-modal').classList.contains('hidden') ? document.querySelector('#plan-modal').classList.remove('hidden') : document.querySelector('#plan-modal').classList.add('hidden')\r\n                                    }}><AiOutlineClose className=\"text-red-500 h-6 w-6\" id='hide' /></button>\r\n\r\n\r\n                                    <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100\">\r\n            \r\n                                    \r\n                                    <IoPricetagOutline className=\"h-6 w-6 text-green-600\" id='hide'/>\r\n                                </div>\r\n        \r\n\r\n                                <div className=\"mt-3 text-center sm:mt-5\">  \r\n                                    <h3 className=\"text-lg leading-6 font-medium text-gray-900 dark:text-white\" id=\"modal-headline\">\r\n                                    Create a Plan...\r\n                                    </h3>\r\n        \r\n                                    <div className=\"mt-2\">\r\n                                        \r\n                                        <div>\r\n\r\n                                            <fieldset className=\"mt-2 bg-white dark:bg-darkOther-200\">\r\n                                                <div className=\"md:grid md:grid-cols-2\">\r\n                                                <div className=\"\">\r\n                                                        <legend className=\"block text-sm font-medium text-gray-700 text-left dark:text-gray-300\">Plan Name</legend>\r\n                                                        <div className=\"mt-1 rounded-md shadow-sm -space-y-px\">\r\n                                                            <div>\r\n                                                            <label className=\"block text-sm font-medium text-gray-700\"></label>\r\n                                                            <input  name=\"planName\" id=\"name\" autoComplete=\"off\" className=\"dark:bg-darkOther-200 focus:ring-other-200 focus:border-other-200 block w-full font-medium text-md rounded-md py-2 dark:focus:ring-darkOther-200 dark:focus:border-darkOther-200\" \r\n                                                            placeholder=\"Member\" value={planName} onChange={e => setplanName(e.target.value)} />                                                         \r\n                                                            \r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    \r\n                                                    <div className=\"\">\r\n                                                        <legend className=\"block text-sm font-medium text-gray-700 text-left dark:text-gray-300\">Type</legend>\r\n                                                        <div className=\"mt-1 rounded-md shadow-sm -space-y-px\">\r\n                                                            <div>\r\n                                                                <label className=\"sr-only\">type</label>\r\n                                                                <Select defaultValue={planOptions[0]}  placeholder=\"Plan Type\" id=\"type\" value={planType} name=\"planType\" options={planOptions} className=\"focus:ring-other-200 focus:border-other-200 relative block w-full rounded-none rounded-t-md bg-transparent focus:z-10 font-medium text-md dark:focus:border-darkOther-200 dark:focus:ring-darkOther-200\"\r\n                                                                onChange={e => setplanType(e.value)} value={planOptions.filter(function(planOptions) {return planOptions.value === planType})}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                \r\n                                                </div>\r\n                \r\n                                            </fieldset>\r\n\r\n                                            {planType == \"recurring\" ? <fieldset className=\"mt-2 bg-white dark:bg-darkOther-200\" id=\"interval-options\">\r\n                                                <legend className=\"block text-sm font-medium text-gray-700 text-left dark:text-gray-300\">Interval</legend>\r\n                                                <div className=\"mt-1 bg-white rounded-md shadow-sm dark:bg-darkOther-200\">\r\n                                                    <div>\r\n                                                        <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n                                                            <div className=\"mt-1 flex rounded-md shadow-sm\">\r\n                                                                <span className=\"inline-flex items-center px-3 rounded-l-md border-r-2 border-gray-200 bg-gray-50 text-gray-800 sm:text-sm mr-2 dark:bg-darkOther-100 dark:text-white\">\r\n                                                                    every\r\n                                                                </span>\r\n                                                                <input name=\"interval\" id=\"interval\" type=\"text\" placeholder=\"Interval Count\" autoComplete=\"off\" className=\"dark:bg-darkOther-200 block w-full font-medium text-md rounded-md py-2 \" value={interval} onChange={e => setinterval(e.target.value)}/>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"absolute inset-y-0 right-0 flex items-center\">\r\n                                                                <label className=\"sr-only\">Interval Type</label>\r\n                                                                <Select defaultValue={intervalTypeOptions[3]}  id=\"type\" value={intervalType} name=\"intervalType\" options={intervalTypeOptions} placeholder=\"Interval\" className=\"px-3 w-32\"\r\n                                                                onChange={e => setintervalType(e.value)} value={intervalTypeOptions.filter(function(intervalTypeOptions) {return intervalTypeOptions.value === intervalType})}/>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </fieldset> : <div></div>}\r\n                                        \r\n\r\n                                            <fieldset className=\"mt-4 bg-white dark:bg-darkOther-200\">\r\n                                                <legend className=\"block text-sm font-medium text-gray-700 text-left dark:text-gray-300\">Price</legend>\r\n                                                <div className=\"mt-1 bg-white rounded-md shadow-sm dark:bg-darkOther-200\">\r\n                                                    <div>\r\n                                                        <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n                                                            <input type=\"text\" name=\"price\" id=\"price\" className=\"dark:bg-darkOther-200 focus:ring-other-200 focus:border-other-200 block w-full font-medium text-md  rounded-md py-2 dark:focus:border-darkOther-200 dark:focus:ring-darkOther-200\" \r\n                                                            placeholder=\"0.00\" value={price} autoComplete=\"off\" onChange={e => setprice(e.target.value)}/>\r\n\r\n                                                            <div className=\"absolute inset-y-0 right-0 flex items-center\">\r\n                                                                <label className=\"sr-only\">Currency</label>\r\n                                                                <Select defaultValue={currencyOptions[0]}  id=\"type\" value={priceCurrency} name=\"priceCurrency\" placeholder=\"Currency\" options={currencyOptions} className=\"px-3 w-48 dark:bg-darkOther-200\"\r\n                                                                onChange={e => setpriceCurrency(e.value)} isSearchable value={currencyOptions.filter(function(currencyOptions) {return currencyOptions.value === priceCurrency})}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            \r\n                                            </fieldset>\r\n        \r\n                                            <fieldset className=\"mt-2 bg-whit dark:bg-darkOther-200\" id=\"interval-fieldset\">\r\n                                                    <div className=\"\">\r\n                                                        <legend className=\"block text-sm font-medium text-gray-700 text-left dark:text-gray-300\">Roles</legend>\r\n                                                        <div className=\"mt-1 rounded-md shadow-sm -space-y-px\">\r\n                                                            <div>\r\n                                                                <label className=\"sr-only\">roles</label>\r\n                                                                <Select id=\"roles\" value={planRole}  placeholder=\"Roles\" closeMenuOnSelect={false} styles={colourStyles} name=\"planRole\" isSearchable components={makeAnimated()} isMulti options={availableRoles} className=\"focus:ring-other-200 focus:border-other-200 relative block w-full rounded-none rounded-t-md bg-transparent focus:z-10 font-medium text-md dark:focus:border-darkOther-200 dark:focus:ring-darkOther-200\"\r\n                                                                    onChange={e => setplanRole(e)} />\r\n                                                                                                                                    \r\n                                                            \r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                            \r\n                                            </fieldset>\r\n\r\n                                            <fieldset className=\"mt-2 bg-white dark:bg-darkOther-200\" id=\"interval-fieldset\">\r\n                                                    <div className=\"\">\r\n                                                        <legend className=\"block text-sm font-medium text-gray-700 text-left dark:text-gray-300\">{unbinding ? \"Unbinding Enabled\" : \"Unbinding Disabled\"}</legend>\r\n                                                        <div className=\"mt-1 rounded-md shadow-sm -space-y-px\">\r\n                                                            <div className=\"text-left\">\r\n                                                                <label className=\"sr-only\">allow unbinding</label>\r\n                                                                <Switch \r\n                                                                checked={unbinding}\r\n                                                                onChange={e => setunbinding(e)}\r\n                                                                as=\"button\" \r\n                                                                className={`${unbinding ? \"bg-green-400\" : \"bg-gray-200\"} relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none`}>\r\n\r\n                                                                    {unbinding ? \r\n                                                                    <span aria-hidden=\"true\" className=\"pointer-events-none translate-x-0 inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200\"></span> : \r\n                                                                    <span aria-hidden=\"true\" className=\"pointer-events-none translate-x-5 inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200\"></span>\r\n                                                                    }\r\n\r\n                                                                </Switch>\r\n                                                                                                                                    \r\n                                                            \r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                            \r\n                                            </fieldset>\r\n        \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"mt-5 sm:mt-6\">\r\n                                <button  name=\"license-modal\" type=\"submit\" className=\"inline-flex justify-center w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-other-200 text-base font-medium text-white hover:bg-other-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-other-200 sm:text-sm dark:focus:ring-darkOther-200 dark:hover:bg-darkOther-200 dark:bg-darkOther-100\">\r\n                                    Create\r\n                                </button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    \r\n                    </div>\r\n                    </form>\r\n            </div>\r\n\r\n        )\r\n\r\n}\r\nexport default PlanModal","E:\\dashboard-react\\src\\components\\home\\restockModal.js",[],"E:\\dashboard-react\\src\\components\\licenses\\licenses.js",["107","108"],"import '../../static/styles/main.css'; \r\nimport React, { Component, useEffect } from 'react';\r\nimport LicenseModal from './licenseModal';\r\nimport LicenseTable from './table';\r\nimport AdminNavigation from '../adminNav';\r\nimport AdminSearchbar from '../adminSearch';\r\n\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\nimport { FaPlus } from 'react-icons/fa';\r\n\r\nclass Licenses extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {}\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        function filter() {\r\n            var input, filter, table, tr, td, i, txtValue;\r\n            input = document.getElementById(\"searchInput\");\r\n            filter = input.value.toUpperCase();\r\n            table = document.getElementById(\"table\");\r\n            tr = table.getElementsByTagName(\"tr\");\r\n            \r\n            // Loop through all table rows, and hide those who don't match the search query\r\n            for (i = 0; i < tr.length; i++) {\r\n                try{\r\n                    var td1 = tr[i].getElementsByTagName(\"td\")[1];\r\n\r\n                    txtValue = td1.textContent || td1.innerText;\r\n                    if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n                        tr[i].style.display = \"\";\r\n                    } else {\r\n                        tr[i].style.display = \"none\";\r\n                    }\r\n\r\n                }catch(e){\r\n                    console.log(e)\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <>\r\n\r\n                <AdminNavigation />\r\n                <div className=\"flex flex-col w-0 flex-1 overflow-hidden\">\r\n                <AdminSearchbar />\r\n            \r\n                <main className=\"flex-1 relative overflow-y-auto focus:outline-none\" id=\"main\" tabIndex='0'>\r\n\r\n                    <div className=\"bg-gray-100 overflow-hidden shadow rounded-lg divide-y mr-12 mt-5 dark:bg-darkOther-200\">\r\n\r\n                        <div className=\"px-4 py-5 sm:px-6\">\r\n\r\n                            <dl className=\"sm:grid sm:grid-cols-2\">\r\n\r\n                                <div className=\"flex flex-col p-2  bg-gray-100 mr-5 dark:bg-darkOther-200\">\r\n\r\n                                    <h1 className=\"dark:text-white\">Licenses</h1>\r\n\r\n                                    <div className=\"relative w-full text-gray-400 focus-within:text-gray-600 dark:bg-darkOther-200\">\r\n\r\n                                        <div className=\"absolute inset-y-0 left-0 flex items-center pointer-events-none\">\r\n                                            <AiOutlineSearch className=\"h-5 w-5 text-gray-900 dark:text-other-100\"/>\r\n                                        </div>   \r\n                                                                               \r\n                                        <input id=\"searchInput\" onKeyUp={filter} autoComplete=\"off\" className=\"dark:text-white dark:bg-darkOther-200 bg-gray-100 block w-full h-full pl-8 pr-3 py-2 text-gray-900 placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-0 focus:border-transparent sm:text-sm\" placeholder=\"Search by DiscordName/DiscordID\" type=\"search\" name=\"search\" />\r\n                                    \r\n                                    </div>\r\n        \r\n                                </div>\r\n\r\n\r\n                                <div className=\"flex-col border-gray-200 p-2 mr-4 text-right\">\r\n\r\n                                    <button name=\"license-modal\" id=\"license-button-hide\" type=\"button\" className=\"inline-flex items-center px-3 py-2 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-white dark:text-white bg-other-100 dark:bg-other-200 text-other-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-other-200 dark:focus:ring-darkOther-200\" onClick={() => {\r\n                                                document.querySelector('#license-modal').classList.contains('hidden') ? document.querySelector('#license-modal').classList.remove('hidden') : document.querySelector('#license-modal').classList.add('hidden')\r\n                                            }}>\r\n                                        <FaPlus className=\"-ml-0.5 mr-2 h-4 w-4 text-white\"/>\r\n                                        New License\r\n                                    </button>\r\n\r\n                                </div>\r\n\r\n                            </dl>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"px-4 py-5 sm:p-6\">\r\n    \r\n                            {/* License Modal */}\r\n                            <LicenseModal />\r\n\r\n\r\n                            <div className=\"flex flex-col \">\r\n\r\n                                <div className=\"-my-2 overflow-y-auto sm:-mx-6 lg: mr-12 dark:bg-darkOther-200\" style={{'min-height': '400px', 'max-height': '800px'}}>\r\n                                    <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\" >\r\n                                        \r\n                                        <div className=\"shadow overflow-hidden\">\r\n\r\n                                            {/* Table */}\r\n                                            <LicenseTable />\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <footer>\r\n                        <p className=\"text-sm font-small text-gray-600\">Invincible Services | 2021 | Thank you for using our services</p>\r\n                    </footer>\r\n   \r\n                </main>\r\n\r\n                </div>\r\n            \r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Licenses","E:\\dashboard-react\\src\\components\\licenses\\licenseModal.js",[],"E:\\dashboard-react\\src\\components\\licenses\\table.js",["109","110","111","112","113","114","115"],"import '../../static/styles/main.css'; \r\nimport React, { useEffect, useState } from 'react';\r\nimport { BsThreeDots } from 'react-icons/bs';\r\n\r\n\r\n\r\nconst LicenseTable = () => {\r\n\r\n    const [users, setUsers] = useState([])\r\n\r\n    async function fetchUsers(){\r\n        const res = await fetch('/api/v1/users');\r\n        res.json()\r\n        .then(res => {setUsers(res)})\r\n        .catch(err =>  {});\r\n        \r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        var abortController = new AbortController();\r\n        fetchUsers()\r\n\r\n\r\n        setInterval(() => {\r\n            abortController = new AbortController();\r\n            fetchUsers()\r\n\r\n        }, 5000);\r\n\r\n\r\n        return () => {\r\n            abortController.abort();\r\n        };\r\n\r\n    }, [])\r\n\r\n\r\n    const renderTableRows = () => {\r\n        return users.map(user => {\r\n            var date = new Date(user.dateCreated * 1000)\r\n            return (\r\n    \r\n                <tr key={user.uuid}>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap dark:bg-darkOther-200\">\r\n                        {/* <div className=\"flex items-center\"> */}\r\n\r\n                            {/* <div className=\"ml-2\"> */}\r\n\r\n                                {/* style=\"font-family: 'Ubuntu Mono', monospace;\" */}\r\n                                <div className=\"text-sm text-gray-700 font-mono dark:text-gray-400\" id=\"key\">\r\n                                    {user.key}\r\n                                </div>\r\n\r\n                            {/* </div> */}\r\n\r\n                        {/* </div> */}\r\n                    </td>\r\n\r\n                    <td className=\"px-6 py-4 whitespace-nowrap dark:bg-darkOther-200\">\r\n                        <div className=\"text-sm text-gray-900 dark:text-gray-500\" id=\"discordName\">{user.discordName == \"empty\" ? \"Unbound\" : user.discordName}</div>\r\n                        <div className=\"text-sm text-gray-500 dark:text-gray-300\" id=\"discordId\">{user.discordId == 123456789 ? \"Unbound\" : user.discordId}</div>\r\n                    </td>\r\n\r\n                    <td className=\"px-6 py-4 whitespace-nowrap dark:bg-darkOther-200\">\r\n                        <div className=\"text-sm text-gray-900\" id=\"keyType\">{user.keyType}</div>\r\n                        <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\r\n                            Active\r\n                        </span>\r\n                    </td>\r\n\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:bg-darkOther-200\">\r\n                        {\r\n                        `${date.getDate()} ${['January','February','March','April','May','June','July','August','September','October','November','December'][date.getMonth()]}, ${date.getFullYear()}`\r\n                        }\r\n                    </td>\r\n\r\n                    <td className=\"px-6 py-4 whitespace-nowrap dark:bg-darkOther-200\">\r\n                        \r\n                        <button className=\"ml-2 text-gray-600 hover:text-gray-900\" id={`${user.uuid}-dropdown-button-hide`} onClick={() => {\r\n                            document.querySelector(`#dropdown-${user.uuid}`).classList.contains('hidden') ? document.querySelector(`#dropdown-${user.uuid}`).classList.remove('hidden') : document.querySelector(`#dropdown-${user.uuid}`).classList.add('hidden')\r\n                        }}> <BsThreeDots className=\"h-4 w-4\" id={`${user.uuid}-icon-hide`} />\r\n                        </button>\r\n\r\n                        <div id={`dropdown-${user.uuid}`} className=\"dark:bg-darkOther-200 hidden mx-1 ml-24 mt-24 origin-top-right absolute top-2 w-48 mt-1 rounded-md shadow-lg z-2 bg-white ring-1 ring-black ring-opacity-5\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu\">\r\n\r\n                            <a href=\"#\" className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-white dark:hover:bg-darkOther-300\" role=\"menuitem\" id=\"hide\">Unbind from User</a>\r\n                            <a href=\"#\" className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-white dark:hover:bg-darkOther-300\" role=\"menuitem\" id=\"hide\">Revoke & Delete</a>\r\n                            <a href=\"#\" className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-white dark:hover:bg-darkOther-300\" role=\"menuitem\" id=\"hide\">Send receipt via email</a>\r\n                            <a href=\"#\" className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-white dark:hover:bg-darkOther-300\" role=\"menuitem\" id=\"hide\">Extend license</a>\r\n                    \r\n                        </div>\r\n\r\n                    </td>\r\n\r\n                </tr>\r\n            )\r\n            \r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n            <table className=\"w-full overflow-y-auto\" id=\"table\" id='table'>\r\n\r\n                <thead className=\"bg-gray-200 dark:bg-darkOther-100\">\r\n\r\n                    <tr>\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Key\r\n                        </th>\r\n\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        User\r\n                        </th>\r\n\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Plan\r\n                        </th>\r\n\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Created\r\n                        </th>\r\n\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Options\r\n                        </th>\r\n                    </tr>\r\n\r\n                </thead>\r\n                \r\n                <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700 min-h-full\">\r\n                    {renderTableRows()}\r\n                </tbody>\r\n                \r\n            </table>\r\n\r\n    )\r\n\r\n\r\n\r\n}\r\nexport default LicenseTable","E:\\dashboard-react\\src\\components\\users\\table.js",["116","117","118","119","120"],"import '../../static/styles/main.css'; \r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport {FaUserCircle} from 'react-icons/fa'\r\n\r\nconst LicenseTable = () => {\r\n    const [users, setUsers] = useState([])\r\n    \r\n\r\n    async function fetchUsers(){\r\n        const res = await fetch('/api/v1/users');\r\n        res.json()\r\n        .then(res => {setUsers(res)})\r\n        .catch(err =>  {});\r\n        \r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        var abortController = new AbortController();\r\n        fetchUsers()\r\n\r\n\r\n        setInterval(() => {\r\n            abortController = new AbortController();\r\n            fetchUsers()\r\n\r\n        }, 5000);\r\n\r\n\r\n        return () => {\r\n            abortController.abort();\r\n        };\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    const renderTableRows = () => {\r\n        return users.map(user => {\r\n            return (\r\n                <tr key={user.id}>\r\n                    <td className=\"px-6 py-4 whitespace-nowra dark:bg-darkOther-200\">\r\n                        <div className=\"flex items-center\">\r\n                            <div className=\"flex-shrink-0 h-10 w-10\">\r\n                            {user.discordImage == \"\" ? <FaUserCircle className=\"h-10 w-10 rounded-full bg-other-200 text-other-100\" /> : <img className=\"h-10 w-10 rounded-full\" src={user.discordImage} alt=\"\" />}\r\n                            \r\n                            </div>\r\n\r\n                            <div className=\"ml-4\">\r\n                                <div className=\"text-sm font-medium text-gray-900 dark:text-gray-400\">\r\n                                {user.discordName == \"empty\" ? \"Unbound\" : user.discordName}\r\n                                </div>\r\n\r\n                                <div className=\"text-sm text-gray-500 dark:text-gray-300\">\r\n                                {user.discordId == 123456789 ? \"Unbound\" : user.discordId}\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n\r\n                    </td>\r\n\r\n                    <td className=\"px-6 py-4 whitespace-nowrap dark:bg-darkOther-200\">\r\n                        <div className=\"text-sm text-gray-900 dark:text-gray-400\">{user.email}</div>\r\n                    </td>\r\n\r\n                    <td className=\"px-6 py-4 whitespace-nowrap dark:bg-darkOther-200\">\r\n                        <div className=\"text-sm text-gray-700 font-mono dark:text-gray-400\">{user.key}</div>\r\n                        <div className=\"text-sm text-gray-500 dark:text-gray-300\">{user.keyType}</div>\r\n                    </td>\r\n             \r\n\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:bg-darkOther-200 dark:text-gray-400\">\r\n                    {user.dateJoined == 0 ? \"Not joined\" : new Date(user.dateJoined * 1000).constructor()}\r\n                    </td>\r\n\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium dark:bg-darkOther-200\">\r\n                        <span className=\"text-other-200 hover:text-indigo-900\"></span>\r\n                    </td>\r\n\r\n                </tr>\r\n            )\r\n            \r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n            <table className=\"w-full overflow-y-auto\" id=\"table\" id='table'>\r\n\r\n                <thead className=\"bg-gray-200 dark:bg-darkOther-100\">\r\n\r\n                    <tr>\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            User\r\n                        </th>\r\n    \r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Email\r\n                        </th>\r\n    \r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Key\r\n                        </th>\r\n    \r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Joined\r\n                        </th>\r\n    \r\n                        <th scope=\"col\" className=\"relative px-6 py-3\">\r\n                        </th>\r\n\r\n                    </tr>\r\n\r\n                </thead>\r\n                \r\n                <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700 min-h-full\">\r\n                    {renderTableRows()}\r\n                </tbody>\r\n                \r\n            </table>\r\n\r\n    )\r\n\r\n\r\n}\r\nexport default LicenseTable","E:\\dashboard-react\\src\\components\\settings\\settings.js",["121"],"import '../../static/styles/main.css'; \r\nimport React, { Component, useEffect } from 'react';\r\nimport AdminNavigation from '../adminNav';\r\nimport AdminSearchbar from '../adminSearch';\r\n\r\nimport { FaStripe } from 'react-icons/fa'\r\n\r\nclass Settings extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {}\r\n\r\n    }\r\n\r\n    openIntergrate = () => {\r\n        window.open('https://connect.stripe.com/oauth/authorize?response_type=code&client_id=ca_IoulDfRGftLWpHLLkw7NJwDFfs9LqhgT&scope=read_write&redirect_uri=http://127.0.0.1:4000/stripe/oauth/uri', '_blank').focus()\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <AdminNavigation />\r\n                <div className=\"flex flex-col w-0 flex-1 overflow-hidden\">\r\n                <AdminSearchbar />\r\n                <main className=\"space-y-6 sm:px-6 overflow-y-auto mb-12\">\r\n                    <section aria-labelledby=\"section1\">\r\n\r\n                        <div className=\"shadow sm:rounded-md sm:overflow-hidden mt-8 shadow-lg w-3/4\">\r\n                            <div className=\"bg-gray-100 py-4 px-4 sm:p-6 dark:bg-darkOther-200\">\r\n                                <div>\r\n                                    <h1 className=\"text-lg font-medium text-other-300 dark:text-white\">General Settings</h1>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"shadow sm:rounded-md sm:overflow-hidden mt-3 w-3/4\">\r\n                            <div className=\"bg-gray-100 py-4 px-4 sm:p-6 dark:bg-darkOther-200\">\r\n                                    <div>\r\n                                        <label for=\"accountName\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-400\">Account Name</label>\r\n                                        <div className=\"mt-1\">\r\n                                            <input type=\"text\" name=\"accountName\" id=\"accountName\" className=\"dark:text-other-100 dark:bg-darkOther-100 shadow-sm focus:ring-other-200 focus:border-other-200 block w-1/2 text-md border-gray-300 rounded-md py-2 dark:focus:ring-darkOther-200 dark:focus:border-darkOther-200\" placeholder=\"Cook Group\" aria-describedby=\"email-description\" />\r\n                                        </div>\r\n\r\n                                        <p className=\"mt-2 text-sm text-gray-500\" id=\"accountName-description\">This account name will be displayed on the Dashboard & in email receipts</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"text-right\">\r\n                                        <button className=\"text-other-200 text-sm font-medium bg-gray-200 rounded-lg py-2 px-8 text-right dark:bg-darkOther-100 dark:text-other-100\">Save</button>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"shadow sm:rounded-md sm:overflow-hidden mt-3 w-3/4\">\r\n                            <div className=\"bg-gray-100 py-4 px-4 sm:p-6 dark:bg-darkOther-200\">\r\n                                <div>\r\n                                    <label for=\"domain\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-400\">Dashboard Domain</label>\r\n                                    <div className=\"mt-1\">\r\n                                    <input type=\"text\" name=\"domain\" id=\"domain\" className=\"dark:text-other-100 dark:bg-darkOther-100 shadow-sm focus:ring-other-200 focus:border-other-200 dark:focus:ring-darkOther-200 dark:focus:border-darkOther-200 block w-1/2 text-md border-gray-300 rounded-md py-2\" placeholder=\"www.cookgroup.com\" aria-describedby=\"domain-description\" />\r\n                                    </div>\r\n                                    <p className=\"mt-2 text-sm text-gray-500\" id=\"accountName-description\">Don't include the https://</p>\r\n                                </div>\r\n\r\n                                <div className=\"text-right\">\r\n                                    <button className=\"text-other-200 text-sm font-medium bg-gray-200 rounded-lg py-2 px-8 text-right dark:bg-darkOther-100 dark:text-other-100\">Save</button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"shadow sm:rounded-md sm:overflow-hidden mt-3 w-3/4\">\r\n                            <div className=\"bg-gray-100 py-4 px-4 sm:p-6 dark:bg-darkOther-200\">\r\n                                <div>\r\n                                    <label for=\"supportEmail\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-400\">Support email</label>\r\n                                    <div className=\"mt-1\">\r\n                                        <input type=\"text\" name=\"supportEmail\" id=\"supportEmail\" className=\"dark:text-other-100 dark:bg-darkOther-100 shadow-sm focus:ring-other-200 focus:border-other-200 dark:focus:ring-darkOther-200 dark:focus:border-darkOther-200 block w-1/2 text-md border-gray-300 rounded-md py-2\" placeholder=\"help@cookgroup.com\" aria-describedby=\"supportEmail-description\" />\r\n                                    </div>\r\n                                    <p className=\"mt-2 text-sm text-gray-500\" id=\"supportEmail-description\">This will be displayed to all your users if they require assistance</p>\r\n                                </div>\r\n\r\n                                <div className=\"text-right\">\r\n                                    <button className=\"text-other-200 text-sm font-medium bg-gray-200 rounded-lg py-2 px-8 text-right dark:bg-darkOther-100 dark:text-other-100\">Save</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </section>\r\n\r\n                    <section aria-labelledby=\"section2\">\r\n                        <div className=\"shadow sm:rounded-md sm:overflow-hidden mt-8 shadow-lg w-3/4\">\r\n                            <div className=\"bg-gray-100 py-4 px-4 sm:p-6 dark:bg-darkOther-200\">\r\n                                <div>\r\n                                    <h1 className=\"text-lg font-medium text-other-300 dark:text-white\">Branding Settings</h1>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"shadow sm:rounded-md sm:overflow-hidden mt-3 w-3/4\">\r\n                            <div className=\"bg-gray-100 py-4 px-4 sm:p-6 dark:bg-darkOther-200\">\r\n                                <div>\r\n                                    <label for=\"logo\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-400\">Logo</label>\r\n                                    <div className=\"mt-1\">\r\n                                    <input type=\"text\" name=\"logo\" id=\"logo\" className=\"dark:text-other-100 dark:bg-darkOther-100 shadow-sm focus:ring-other-200 focus:border-other-200 dark:focus:ring-darkOther-200 dark:focus:border-darkOther-200 block w-1/2 text-md border-gray-300 rounded-md py-2\" placeholder=\"help@cookgroup.com\" aria-describedby=\"logo-description\" />\r\n                                    </div>\r\n                                    <p className=\"mt-2 text-sm text-gray-500\" id=\"logo-description\">Enter an image URL here</p>\r\n                                </div>\r\n                                <div className=\"text-right\">\r\n                                    <button className=\"text-other-200 text-sm font-medium bg-gray-200 rounded-lg py-2 px-8 text-right dark:bg-darkOther-100 dark:text-other-100\">Save</button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n\r\n\r\n                    <section aria-labelledby=\"section3\">\r\n                        <div className=\"shadow sm:rounded-md sm:overflow-hidden mt-8 shadow-lg w-3/4\">\r\n                            <div className=\"bg-gray-100 py-4 px-4 sm:p-6 dark:bg-darkOther-200\">\r\n                                <div>\r\n                                    <h1 className=\"text-lg font-medium text-other-300  dark:text-white\">Stripe Settings</h1>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"shadow sm:rounded-md sm:overflow-hidden mt-3 w-3/4\">\r\n                            <div className=\"bg-gray-100 py-4 px-4 sm:p-6 dark:bg-darkOther-200\">\r\n                                <div>\r\n                                    <label for=\"failePayments\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-400\">Setup Stripe Intergation</label>\r\n                                    <div className=\"mt-1\">\r\n                                        <button onClick={this.openIntergrate}  className=\"bg-other-200 dark:bg-darkOther-100 rounded-sm w-24 h-10 text-white text-md font-medium px-6 hover:bg-other-300\">\r\n                                            <FaStripe className=\"h-10 w-12\"/>\r\n                                        </button>\r\n                                    </div>\r\n                                    <p className=\"mt-2 text-sm text-gray-500\" id=\"failePayments-description\">Link you stripe account...</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"shadow sm:rounded-md sm:overflow-hidden mt-3 w-3/4 mb-12\">\r\n                            <div className=\"bg-gray-100 py-4 px-4 sm:p-6 dark:bg-darkOther-200\">\r\n                                <div>\r\n                                    <label for=\"failePayments\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-400\">Manage Failed Payments</label>\r\n                                    <div className=\"mt-1\">\r\n                                        <select id=\"failePayments\" name=\"failePayments\" className=\"py-5 text-gray-800 font-medium focus:ring-other-200 focus:border-other-200 dark:focus:ring-darkOther-200 dark:focus:border-darkOther-200 dark:text-white relative block w-1/4 rounded-none rounded-t-md bg-transparent focus:z-10 sm:text-sm border-gray-300\">\r\n                                            <option value=\"1\" className=\"font-medium dark:text-white dark:bg-darkOther-200\">Delete key & Kick user</option>\r\n                                            <option value=\"2\" className=\"font-medium dark:text-white dark:bg-darkOther-200\">Remove roles & Allow user to renew</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <p className=\"mt-2 text-sm text-gray-500\" id=\"failePayments-description\">Select how you want to deal with failed payments from users</p>\r\n                                </div>\r\n                                <div className=\"text-right\">\r\n                                    <button className=\"text-other-200 text-sm font-medium bg-gray-200 rounded-lg py-2 px-8 text-right dark:bg-darkOther-100 dark:text-other-100\">Save</button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    \r\n                    </section>\r\n\r\n                </main>\r\n                </div>\r\n            \r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Settings","E:\\dashboard-react\\src\\components\\home\\planTable.js",["122"],"import '../../static/styles/main.css'; \r\nimport React, { useState, useEffect } from 'react';\r\nimport currencyToSymbolMap from 'currency-symbol-map/map'\r\n\r\n\r\n\r\nimport { AiOutlineDelete, AiOutlineEdit } from 'react-icons/ai';\r\nimport { BsThreeDots } from 'react-icons/bs';\r\n\r\n\r\nconst PlanTable = () => {\r\n\r\n    const [plans, setPlans] = useState([])\r\n\r\n    async function fetchPlans(){\r\n        const res = await fetch('/api/v1/plans');\r\n        res.json()\r\n        .then(res => {setPlans(res)})\r\n        .catch(err =>  {});\r\n        \r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        var abortController = new AbortController();\r\n        fetchPlans()\r\n\r\n\r\n        setInterval(() => {\r\n            abortController = new AbortController();\r\n            fetchPlans()\r\n\r\n        }, 5000);\r\n\r\n\r\n        return () => {\r\n            abortController.abort();\r\n        };\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    const deletePlan =  async (id) => {\r\n        await fetch('/api/v1/plans/delete/' + id, {\r\n            method:'get',\r\n            headers: {\r\n                'x-access-token':'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    const renderTableRows = () => {\r\n        return plans.map(plan => {\r\n            return (\r\n                <tr key={plan.id}>\r\n\r\n                    <td className=\"px-6 py-3 max-w-0 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white dark:bg-darkOther-200\">\r\n                        <div className=\"flex items-center lg:pl-2\">\r\n                            {/* <div className=\"flex-shrink-0 w-2.5 h-2.5 rounded-full bg-pink-600\" aria-hidden=\"true\"></div> */}\r\n                            <a href=\"#\" className=\"truncate\">\r\n                                {plan.planName}\r\n                            </a>\r\n                        </div>\r\n                    </td>\r\n\r\n                    <td className=\"px-6 py-3 text-sm text-gray-800 dark:text-white font-medium dark:bg-darkOther-200\">\r\n                        <div className=\"flex items-center space-x-2\">\r\n                            <span className=\"flex-shrink-0 text-xs leading-5 font-medium\"> {currencyToSymbolMap[plan.currency]}{plan.price}</span>\r\n                        </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-3 text-sm text-gray-800 font-medium dark:bg-darkOther-200 dark:text-white\">\r\n                        <div className=\"flex items-center space-x-2\">\r\n                            <span className=\"flex-shrink-0 text-xs leading-5 font-medium\">{plan.intervalType}</span>\r\n                        </div>\r\n                    </td>\r\n\r\n\r\n                    <td className=\"pr-6 dark:bg-darkOther-200 dark:text-white\">\r\n                        <div className=\"relative flex justify-end items-center\">\r\n                        <button id={`${plan.id}-plans-dropdown-button-hide`} name=\"plans-options-dropdown\" aria-haspopup=\"true\" type=\"button\" aria-expanded=\"true\" className=\"dark:text-white w-8 h-8 inline-flex items-center justify-center text-gray-800 rounded-full hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"  onClick={() => {\r\n                            document.querySelector('#plans-options-dropdown-' + plan.id).classList.contains('hidden') ? document.querySelector('#plans-options-dropdown-' + plan.id).classList.remove('hidden') : document.querySelector('#plans-options-dropdown-' + plan.id).classList.add('hidden')\r\n                        }}>\r\n                            <BsThreeDots className=\"h-4 w-4\" id={`${plan.id}-icon-hide`} />\r\n                        </button>\r\n\r\n                        <div id={`plans-options-dropdown-${plan.id}`} type=\"button\" className=\"dark:bg-darkOther-200 hidden mx-3 mr-10 origin-top-right absolute right-7 top-0 w-48 mt-1 rounded-md shadow-lg z-10 bg-white ring-1 ring-black ring-opacity-5\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"project-options-menu-0\">\r\n                            <div className=\"py-1\" role=\"none\">\r\n                            <button id={`plans-edit-${plan.id}`} className=\"group flex items-center px-4 w-full py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-darkOther-300 dark:text-white\" role=\"menuitem\">\r\n                            <AiOutlineEdit className=\"mr-3 h-5 w-5 text-gray-400 group-hover:text-gray-500\" />\r\n                                Edit\r\n                            </button>\r\n                            <button id={`plans-delete-${plan.id}`} type=\"button\" className=\"group flex w-full items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-darkOther-300 dark:text-white\" role=\"menuitem\" onClick={() => deletePlan(plan.id)}>\r\n                                <AiOutlineDelete className=\"mr-3 h-5 w-5 text-gray-400 group-hover:text-gray-500\" onClick={() => deletePlan(plan.id)}/>\r\n                                Delete\r\n                            </button>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </td>\r\n\r\n                </tr>\r\n            )\r\n            \r\n        })\r\n    }\r\n    \r\n\r\n\r\n\r\n    return (\r\n\r\n            <table className=\"bg-white w-full overflow-y-auto mt-2 rounded-md\" id=\"table\">\r\n\r\n                <thead className=\"bg-gray-200 rounded-md dark:bg-darkOther-100\">\r\n\r\n                    <tr className=\"border-gray-200\">\r\n\r\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        <span className=\"lg:pl-2\"> Plan</span>\r\n                        </th>\r\n\r\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Price\r\n                        </th>\r\n\r\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Interval\r\n                        </th>\r\n\r\n\r\n                        <th className=\"md:table-cell px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            Options\r\n                        </th>\r\n\r\n                    </tr>\r\n\r\n                </thead>\r\n                \r\n                <tbody className=\"bg-white divide-y divide-gray-200 dark:divide-gray-500 w-full\">\r\n                    {renderTableRows()}\r\n                </tbody>\r\n                \r\n            </table>\r\n\r\n    )\r\n\r\n\r\n}\r\nexport default PlanTable","E:\\dashboard-react\\src\\components\\home\\restockTable.js",["123"],"import '../../static/styles/main.css'; \r\nimport React, { useState, useEffect } from 'react';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\n\r\n\r\n\r\nimport { AiOutlineDelete, AiOutlineCopy } from 'react-icons/ai';\r\nimport { BsThreeDots } from 'react-icons/bs';\r\n\r\n\r\n\r\nconst RestockTable = () => {\r\n    const [restocks, setRestocks] = useState([])\r\n\r\n    async function fetchRestocks(){\r\n        const res = await fetch('/api/v1/restocks');\r\n        res.json()\r\n        .then(res => {setRestocks(res);})\r\n        .catch(err =>  {console.log(err)});\r\n        \r\n    }\r\n\r\n    useEffect(() =>{\r\n        var abortController = new AbortController();\r\n        fetchRestocks()\r\n        \r\n\r\n        setInterval(() => {\r\n            abortController = new AbortController();\r\n            fetchRestocks()\r\n        }, 5000);\r\n\r\n\r\n        return () => {\r\n            abortController.abort();\r\n        };\r\n\r\n    }, [])\r\n\r\n    const deleteRestock = async (id) => {\r\n        var response = await fetch('/api/v1/restocks/delete/' + id, {\r\n            method:'get',\r\n            headers: {\r\n                authorization:1\r\n            }\r\n        })\r\n        if(response.ok) {\r\n            return\r\n        }else{\r\n            return\r\n        }\r\n    }\r\n\r\n\r\n    const renderTableRows = () => {\r\n        return restocks.map(restock => {\r\n            return (\r\n                <tr key={restock.id}>\r\n\r\n                    <td className=\"px-6 py-3 max-w-0 whitespace-nowrap text-sm font-medium text-gray-900 dark:bg-darkOther-200 dark:text-white\">\r\n                        <div className=\"flex items-center lg:pl-2\">\r\n                            {/* <div className=\"flex-shrink-0 w-2.5 h-2.5 rounded-full bg-pink-600\" aria-hidden=\"true\"></div> */}\r\n                                <a href=\"#\" className=\"truncate\">\r\n                                {restock.planId}\r\n                                </a>\r\n                        </div>\r\n                    </td>\r\n\r\n                    <td className=\"px-6 py-3 text-sm text-gray-800 font-medium dark:bg-darkOther-200 dark:text-white\">\r\n                        <div className=\"flex items-center space-x-2\">\r\n\r\n                        <span className=\"flex-shrink-0 text-xs leading-5 font-medium w-full\"><ProgressBar bgcolor='#3B82F6' completed={(100 * restock.stockRemaining) / restock.stock} /></span>\r\n                        </div>\r\n                    </td>\r\n\r\n                    <td className=\"pr-6 dark:bg-darkOther-200 dark:text-white\">\r\n                        <div className=\"relative flex justify-end items-center\">\r\n                            <button id=\"restock-options-button-hide\" name=\"restock-options-dropdown\" aria-haspopup=\"true\" type=\"button\" aria-expanded=\"true\" className=\"w-8 h-8 inline-flex items-center justify-center text-gray-800 rounded-full hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 dark:text-white\" onClick={() => {\r\n                                document.querySelector('#restock-options-dropdown-' + restock.id).classList.contains('hidden') ? document.querySelector('#restock-options-dropdown-' + restock.id).classList.remove('hidden') : document.querySelector('#restock-options-dropdown-'  + restock.id).classList.add('hidden')\r\n                            }}>\r\n                            <BsThreeDots className=\"h-4 w-4\" id='hide'/>\r\n                            </button>\r\n\r\n                            <div id={\"restock-options-dropdown-\" + restock.id} className=\"dark:bg-darkOther-200 hidden mx-3 mr-10 origin-top-right absolute right-7 top-0 w-48 mt-1 rounded-md shadow-lg z-10 bg-white ring-1 ring-black ring-opacity-5\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"project-options-menu-0\">\r\n                                <div className=\"py-1\" role=\"none\">\r\n                                    <CopyToClipboard href=\"#\" className=\"group flex w-full items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-darkOther-300 dark:text-white\" role=\"menuitem\" text={`${window.location.origin}/?password=${restock.password}`} onCopy={() =>\r\n                                    document.querySelector('#copy-hide-' + restock.id).classList.add('text-green-500')}>\r\n                                    <button className=\"w-full\" type='button' id={\"restock-options-dropdown-copy-\" + restock.id}>\r\n                                        <AiOutlineCopy className=\"mr-3 h-5 w-5 text-gray-400 group-hover:text-gray-500\" id={'copy-hide-'+ restock.id}/>\r\n                                        Copy Link\r\n                                    </button>\r\n                                    </CopyToClipboard>\r\n\r\n                                    <button type='button' className=\"group flex w-full items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-darkOther-300 dark:text-white\" role=\"menuitem\" onClick={() => deleteRestock(restock.id)} >\r\n                                        <AiOutlineDelete className=\"mr-3 h-5 w-5 text-gray-400 group-hover:text-gray-500\" onClick={() => deleteRestock(restock.id)}/>\r\n                                        Delete\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    \r\n                    </td>\r\n\r\n                </tr>\r\n            )\r\n            \r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n            <table className=\"bg-white w-full overflow-y-auto mt-2 rounded-md\" id='table'>\r\n\r\n                <thead className=\"bg-gray-200 rounded-md dark:bg-darkOther-100\">\r\n                    <tr className=\"border-gray-200\">\r\n\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        <span className=\"lg:pl-2\">Plan</span>\r\n                    </th>\r\n\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-widerr\">\r\n                        Stock\r\n                    </th>\r\n\r\n                    <th className=\"md:table-cell px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Options\r\n                    </th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                \r\n                <tbody className=\"bg-white divide-y divide-gray-200 dark:divide-gray-500 w-full\">\r\n                    {renderTableRows()}\r\n                </tbody>\r\n                \r\n            </table>\r\n\r\n    )\r\n\r\n\r\n}\r\nexport default RestockTable","E:\\dashboard-react\\src\\components\\siteHomePage\\home.js",["124","125","126","127"],"import '../../static/styles/main.css'; \r\nimport React, { Component, useEffect } from 'react';\r\n\r\n\r\nclass Settings extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {}\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n\r\n                <div className=\"w-full bg-gray-50\">\r\n                <div className=\"w-full bg-white shadow\">\r\n                    <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\r\n                    <div className=\"flex justify-between items-center py-6 md:justify-start md:space-x-10\">\r\n                        <div className=\"flex justify-start lg:w-0 lg:flex-1\">\r\n                        <a href=\"#\">\r\n                            <span className=\"sr-only\">Workflow</span>\r\n                            <img className=\"h-8 w-auto sm:h-10\" src=\"https://tailwindui.com/img/logos/workflow-mark-other-200.svg\" alt=\"\" />\r\n                        </a>\r\n                        </div>\r\n                        <div className=\"-mr-2 -my-2 md:hidden\">\r\n                        <button type=\"button\" className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\r\n                            <span className=\"sr-only\">Open menu</span>\r\n        \r\n                            <svg className=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\r\n                            </svg>\r\n                        </button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    </div>\r\n\r\n\r\n             \r\n                </div>\r\n\r\n                <main className=\"lg:relative\">\r\n                    <div className=\"mx-auto max-w-7xl w-full pt-16 pb-20 text-center lg:py-48 lg:text-left\">\r\n                    <div className=\"px-4 lg:w-1/2 sm:px-8 xl:pr-16\">\r\n                        <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl lg:text-5xl xl:text-6xl\">\r\n                        <span className=\"block xl:inline\">get your dashboard</span>\r\n                        <span className=\"block text-other-200 dark:text-darkOther-200 xl:inline\"> today</span>\r\n                        </h1>\r\n                        <p className=\"mt-3 max-w-md mx-auto text-lg text-gray-500 sm:text-xl md:mt-5 md:max-w-3xl\">\r\n                        explore our site and get started with our dashboards today.\r\n                        </p>\r\n                        <div className=\"mt-10 sm:flex sm:justify-center lg:justify-start\">\r\n                        <div className=\"rounded-md shadow\">\r\n                            <a href={'http://127.0.0.1:4000' + '/discord/oauth'} className=\"dark:bg-darkOther-200 dark:hover:bg-darkOther-300 w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-other-200 hover:bg-other-300 md:py-4 md:text-lg md:px-10\">\r\n                            Get started\r\n                            </a>\r\n                        </div>\r\n                        <div className=\"mt-3 rounded-md shadow sm:mt-0 sm:ml-3\">\r\n                            <a href=\"#\" className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-other-200 dark:text-darkOther-200 bg-white hover:bg-gray-50 md:py-4 md:text-lg md:px-10\">\r\n                            Contact\r\n                            </a>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"relative w-full h-64 sm:h-72 md:h-96 lg:absolute lg:inset-y-0 lg:right-0 lg:w-1/2 lg:h-full\">\r\n                    <img className=\"absolute inset-0 w-full h-full px-24 mt-12\" src=\"https://axaguildev.github.io/react-toolkit/v1.0.0/storybook/images/react.svg\" alt=\"\" />\r\n                    </div>\r\n                </main>\r\n                </div>\r\n\r\n            \r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Settings","E:\\dashboard-react\\src\\components\\userDashboard\\dashboard.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":9,"column":8,"nodeType":"134","messageId":"135","endLine":9,"endColumn":16},{"ruleId":"132","severity":1,"message":"136","line":2,"column":28,"nodeType":"134","messageId":"135","endLine":2,"endColumn":37},{"ruleId":"132","severity":1,"message":"137","line":21,"column":43,"nodeType":"134","messageId":"135","endLine":21,"endColumn":45},{"ruleId":"132","severity":1,"message":"138","line":2,"column":17,"nodeType":"134","messageId":"135","endLine":2,"endColumn":25},{"ruleId":"132","severity":1,"message":"136","line":2,"column":27,"nodeType":"134","messageId":"135","endLine":2,"endColumn":36},{"ruleId":"132","severity":1,"message":"139","line":2,"column":19,"nodeType":"134","messageId":"135","endLine":2,"endColumn":23},{"ruleId":"140","severity":1,"message":"141","line":15,"column":5,"nodeType":"134","endLine":15,"endColumn":14,"suggestions":"142"},{"ruleId":"140","severity":1,"message":"143","line":15,"column":16,"nodeType":"144","endLine":24,"endColumn":6},{"ruleId":"145","severity":1,"message":"146","line":27,"column":14,"nodeType":"147","messageId":"148","endLine":27,"endColumn":16},{"ruleId":"149","severity":1,"message":"150","line":64,"column":96,"nodeType":"151","endLine":64,"endColumn":109},{"ruleId":"149","severity":1,"message":"150","line":135,"column":96,"nodeType":"151","endLine":135,"endColumn":109},{"ruleId":"145","severity":1,"message":"146","line":75,"column":56,"nodeType":"147","messageId":"148","endLine":75,"endColumn":58},{"ruleId":"152","severity":1,"message":"153","line":75,"column":238,"nodeType":"154","endLine":75,"endColumn":382},{"ruleId":"149","severity":1,"message":"150","line":210,"column":102,"nodeType":"151","endLine":210,"endColumn":191},{"ruleId":"145","severity":1,"message":"146","line":219,"column":55,"nodeType":"147","messageId":"148","endLine":219,"endColumn":57},{"ruleId":"149","severity":1,"message":"150","line":234,"column":106,"nodeType":"151","endLine":234,"endColumn":223},{"ruleId":"149","severity":1,"message":"150","line":254,"column":120,"nodeType":"151","endLine":254,"endColumn":226},{"ruleId":"132","severity":1,"message":"136","line":2,"column":28,"nodeType":"134","messageId":"135","endLine":2,"endColumn":37},{"ruleId":"132","severity":1,"message":"137","line":22,"column":43,"nodeType":"134","messageId":"135","endLine":22,"endColumn":45},{"ruleId":"145","severity":1,"message":"146","line":61,"column":118,"nodeType":"147","messageId":"148","endLine":61,"endColumn":120},{"ruleId":"145","severity":1,"message":"146","line":62,"column":114,"nodeType":"147","messageId":"148","endLine":62,"endColumn":116},{"ruleId":"155","severity":1,"message":"156","line":87,"column":29,"nodeType":"154","endLine":87,"endColumn":179},{"ruleId":"155","severity":1,"message":"156","line":88,"column":29,"nodeType":"154","endLine":88,"endColumn":179},{"ruleId":"155","severity":1,"message":"156","line":89,"column":29,"nodeType":"154","endLine":89,"endColumn":179},{"ruleId":"155","severity":1,"message":"156","line":90,"column":29,"nodeType":"154","endLine":90,"endColumn":179},{"ruleId":"149","severity":1,"message":"150","line":106,"column":66,"nodeType":"151","endLine":106,"endColumn":76},{"ruleId":"145","severity":1,"message":"146","line":46,"column":48,"nodeType":"147","messageId":"148","endLine":46,"endColumn":50},{"ruleId":"145","severity":1,"message":"146","line":52,"column":51,"nodeType":"147","messageId":"148","endLine":52,"endColumn":53},{"ruleId":"145","severity":1,"message":"146","line":56,"column":49,"nodeType":"147","messageId":"148","endLine":56,"endColumn":51},{"ruleId":"145","severity":1,"message":"146","line":75,"column":38,"nodeType":"147","messageId":"148","endLine":75,"endColumn":40},{"ruleId":"149","severity":1,"message":"150","line":92,"column":66,"nodeType":"151","endLine":92,"endColumn":76},{"ruleId":"132","severity":1,"message":"136","line":2,"column":28,"nodeType":"134","messageId":"135","endLine":2,"endColumn":37},{"ruleId":"155","severity":1,"message":"156","line":63,"column":29,"nodeType":"154","endLine":63,"endColumn":62},{"ruleId":"155","severity":1,"message":"156","line":64,"column":33,"nodeType":"154","endLine":64,"endColumn":66},{"ruleId":"132","severity":1,"message":"136","line":2,"column":28,"nodeType":"134","messageId":"135","endLine":2,"endColumn":37},{"ruleId":"155","severity":1,"message":"156","line":23,"column":25,"nodeType":"154","endLine":23,"endColumn":37},{"ruleId":"157","severity":1,"message":"158","line":57,"column":62,"nodeType":"147","messageId":"159","endLine":57,"endColumn":63},{"ruleId":"155","severity":1,"message":"156","line":62,"column":29,"nodeType":"154","endLine":62,"endColumn":255},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'SiteHome' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'td' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setAppName'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["162"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},"Add dependencies array: []",{"range":"165","text":"166"},[931,931],", []"]